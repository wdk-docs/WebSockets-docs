# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2021, BandCap
# This file is distributed under the same license as the WebSockets Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: WebSockets Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-09 22:16+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/index.rst:2
msgid "WebSockets"
msgstr ""

#: ../../source/index.rst:4
msgid "WebSockets 是一种先进的技术。它可以在用户的浏览器和服务器之间打开交互式通信会话。 使用此API，您可以向服务器发送消息并接收事件驱动的响应，而无需通过轮询服务器的方式以获得响应。"
msgstr ""

#: ../../source/index.rst:8
msgid "接口"
msgstr ""

#: ../../source/index.rst:10
msgid ":ref:`api_WebSocket` 用于连接WebSocket服务器的主要接口，之后可以在这个连接上发送 和接受数据。"
msgstr ""

#: ../../source/index.rst:11
msgid ":ref:`api_CloseEvent` 连接关闭时WebSocket对象发送的事件。"
msgstr ""

#: ../../source/index.rst:12
msgid ":ref:`api_MessageEvent` 当从服务器获取到消息的时候WebSocket对象触发的事件。"
msgstr ""

#: ../../source/index.rst:15
msgid "工具"
msgstr ""

#: ../../source/index.rst:17
msgid "`HumbleNet`_: 一个在浏览器中工作的跨平台网络库。它由一个围绕websocket和WebRTC的C包装器组成，抽象了跨浏览器的差异，方便了为游戏和其它应用程序创建多用户网络功能。"
msgstr ""

#: ../../source/index.rst:18
msgid "`µWebSockets`_:由C++11和Node.js 实现的高度可扩展的WebSocket服务器和客户端.。"
msgstr ""

#: ../../source/index.rst:19
msgid "`ClusterWS`_:  轻量级、快速和强大的框架，用于在Node.js.中构建可伸缩的WebSocket应用程序。"
msgstr ""

#: ../../source/index.rst:20
msgid "`Socket.IO`_: 一个基于长轮询/WebSocket的Node.js第三方传输协议。"
msgstr ""

#: ../../source/index.rst:21
msgid "`SocketCluster`_: 一个用于Node.js的pub/sub专注于可伸缩 WebSocket框架。"
msgstr ""

#: ../../source/index.rst:22
msgid "`WebSocket-Node`_: 一个用 Node.js实现WebSocket服务器API。"
msgstr ""

#: ../../source/index.rst:23
msgid "`Total.js`_:一个用Node.js 实现的的Web应用程序框架（例如:WebSocket聊天）。"
msgstr ""

#: ../../source/index.rst:24
msgid "`Faye`_: 一个 Node.js的WebSocket (双向连接)和 EventSource (单向连接)的服务器和客户端。"
msgstr ""

#: ../../source/index.rst:25
msgid "`SignalR`_: SignalR在可用时将隐藏使用WebSockets，在不可用时将优雅地使用其他技术和技术，而应用程序代码保持不变。"
msgstr ""

#: ../../source/index.rst:26
msgid "`Caddy`_: 能够将任意命令(stdin/stdout)代理为websocket的web服务器。"
msgstr ""

#: ../../source/index.rst:27
msgid "`ws`_: 一个流行的WebSocket客户端和服务器 Node.js库。"
msgstr ""

#: ../../source/index.rst:28
msgid "`jsonrpc-bidirectional`_: 易于使用异步RPC库，通过单个WebSocket或RTCDataChannel (WebRTC)连接支持双向调用。TCP / SCTP /等。客户端和服务器可以各自承载自己的JSONRPC和服务器端点。"
msgstr ""

#: ../../source/index.rst:29
msgid "`rpc-websockets`_: JSON-RPC 2.0在websocket上实现Node.js和JavaScript。"
msgstr ""

#: ../../source/index.rst:46
msgid "相关话题"
msgstr ""

#: ../../source/index.rst:48
msgid "AJAX"
msgstr ""

#: ../../source/index.rst:49
msgid "JavaScript"
msgstr ""

#: ../../source/index.rst:52
msgid "参见"
msgstr ""

#: ../../source/index.rst:54
msgid "RFC 6455 — The WebSocket Protocol"
msgstr ""

#: ../../source/index.rst:55
msgid "WebSocket API Specification"
msgstr ""

#: ../../source/index.rst:56
msgid "Server-Sent Events"
msgstr ""
