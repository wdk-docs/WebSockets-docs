# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the WebSockets Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: WebSockets Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-18 20:30+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/ws/quick-start.rst:2
msgid "ws: a Node.js WebSocket library"
msgstr ""

#: ../../source/ws/quick-start.rst:4
msgid "ws is a simple to use, blazing fast, and thoroughly tested WebSocket client and server implementation."
msgstr ""

#: ../../source/ws/quick-start.rst:6
msgid "Passes the quite extensive Autobahn test suite: `server <server-report>`_, `client <client-report>`_."
msgstr ""

#: ../../source/ws/quick-start.rst:9
msgid "This module does not work in the browser. The client in the docs is a reference to a back end with the role of a client in the WebSocket communication. Browser clients must use the native `WebSocket`_ object. To make the same code work seamlessly on Node.js and the browser, you can use one of the many wrappers available on npm, like `isomorphic-ws`_."
msgstr ""

#: ../../source/ws/quick-start.rst:17
msgid "Protocol support"
msgstr ""

#: ../../source/ws/quick-start.rst:19
msgid "**HyBi drafts 07-12** (Use the option `protocolVersion: 8`)"
msgstr ""

#: ../../source/ws/quick-start.rst:20
msgid "**HyBi drafts 13-17** (Current default, alternatively option `protocolVersion: 13`)"
msgstr ""

#: ../../source/ws/quick-start.rst:23
msgid "Installing"
msgstr ""

#: ../../source/ws/quick-start.rst:30
msgid "Opt-in for performance and spec compliance"
msgstr ""

#: ../../source/ws/quick-start.rst:32
msgid "There are 2 optional modules that can be installed along side with the ws module. These modules are binary addons which improve certain operations. Prebuilt binaries are available for the most popular platforms so you don't necessarily need to have a C++ compiler installed on your machine."
msgstr ""

#: ../../source/ws/quick-start.rst:36
msgid "`npm install --save-optional bufferutil`: Allows to efficiently perform operations such as masking and unmasking the data payload of the WebSocket frames."
msgstr ""

#: ../../source/ws/quick-start.rst:37
msgid "`npm install --save-optional utf-8-validate`: Allows to efficiently check if a message contains valid UTF-8 as required by the spec."
msgstr ""

#: ../../source/ws/quick-start.rst:40
msgid "API docs"
msgstr ""

#: ../../source/ws/quick-start.rst:42
msgid "See :doc:`ws` for Node.js-like docs for the ws classes."
msgstr ""

#: ../../source/ws/quick-start.rst:45
msgid "WebSocket compression"
msgstr ""

#: ../../source/ws/quick-start.rst:47
msgid "ws supports the `permessage-deflate extension <permessage-deflate>`_ which enables the client and server to negotiate a compression algorithm and its parameters, and then selectively apply it to the data payloads of each WebSocket message."
msgstr ""

#: ../../source/ws/quick-start.rst:51
msgid "The extension is disabled by default on the server and enabled by default on the client. It adds a significant overhead in terms of performance and memory consumption so we suggest to enable it only if it is really needed."
msgstr ""

#: ../../source/ws/quick-start.rst:55
msgid "Node.js has a variety of issues with high-performance compression, where increased concurrency, especially on Linux, can lead to `catastrophic memory fragmentation <node-zlib-bug>`_ and slow performance. If you intend to use permessage-deflate in production, it is worthwhile to set up a test representative of your workload and ensure Node.js/zlib will handle it with acceptable performance and memory usage."
msgstr ""

#: ../../source/ws/quick-start.rst:62
msgid "Tuning of permessage-deflate can be done via the options defined below. You can also use `zlibDeflateOptions` and `zlibInflateOptions`, which is passed directly into the creation of `raw deflate/inflate streams <node-zlib-deflaterawdocs>`_."
msgstr ""

#: ../../source/ws/quick-start.rst:66
msgid "See `the docs <ws-server-options>`_ for more options."
msgstr ""

#: ../../source/ws/quick-start.rst:96
msgid "The client will only use the extension if it is supported and enabled on the server. To always disable the extension on the client set the `perMessageDeflate` option to `false`."
msgstr ""

#: ../../source/ws/quick-start.rst:109
msgid "Usage examples"
msgstr ""

#: ../../source/ws/quick-start.rst:112
msgid "Sending and receiving text data"
msgstr ""

#: ../../source/ws/quick-start.rst:130
msgid "Sending binary data"
msgstr ""

#: ../../source/ws/quick-start.rst:150
msgid "Simple server"
msgstr ""

#: ../../source/ws/quick-start.rst:167
msgid "External HTTP/S server"
msgstr ""

#: ../../source/ws/quick-start.rst:193
msgid "Multiple servers sharing a single HTTP/S server"
msgstr ""

#: ../../source/ws/quick-start.rst:232
msgid "Server broadcast"
msgstr ""

#: ../../source/ws/quick-start.rst:261
msgid "echo.websocket.org demo"
msgstr ""

#: ../../source/ws/quick-start.rst:289
msgid "Other examples"
msgstr ""

#: ../../source/ws/quick-start.rst:291
msgid "For a full example with a browser client communicating with a ws server, see the examples folder."
msgstr ""

#: ../../source/ws/quick-start.rst:293
msgid "Otherwise, see the test cases."
msgstr ""

#: ../../source/ws/quick-start.rst:296
msgid "FAQ"
msgstr ""

#: ../../source/ws/quick-start.rst:298
msgid "... How to get the IP address of the client?"
msgstr ""

#: ../../source/ws/quick-start.rst:300
msgid "The remote IP address can be obtained from the raw socket."
msgstr ""

#: ../../source/ws/quick-start.rst:310
msgid "When the server runs behind a proxy like NGINX, the de-facto standard is to use the `X-Forwarded-For` header."
msgstr ""

#: ../../source/ws/quick-start.rst:318
msgid "... How to detect and close broken connections?"
msgstr ""

#: ../../source/ws/quick-start.rst:320
msgid "Sometimes the link between the server and the client can be interrupted in a way that keeps both the server and the client unaware of the broken state of the connection (e.g. when pulling the cord)."
msgstr ""

#: ../../source/ws/quick-start.rst:324
msgid "In these cases ping messages can be used as a means to verify that the remote endpoint is still responsive."
msgstr ""

#: ../../source/ws/quick-start.rst:352
msgid "Pong messages are automatically sent in response to ping messages as required by the spec."
msgstr ""

#: ../../source/ws/quick-start.rst:354
msgid "Just like the server example above your clients might as well lose connection without knowing it. You might want to add a ping listener on your clients to prevent that. A simple implementation would be:"
msgstr ""

#: ../../source/ws/quick-start.rst:381
msgid "... How to connect via a proxy?"
msgstr ""

#: ../../source/ws/quick-start.rst:383
msgid "Use a custom `http.Agent` implementation like `https-proxy-agent`_ or `socks-proxy-agent`_ ."
msgstr ""

#: ../../source/ws/quick-start.rst:386
msgid "Changelog"
msgstr ""

#: ../../source/ws/quick-start.rst:388
msgid "We're using the GitHub `releases <changelog>`_ for changelog entries."
msgstr ""

#: ../../source/ws/quick-start.rst:391
msgid "License"
msgstr ""

#: ../../source/ws/quick-start.rst:393
msgid "[MIT](LICENSE)"
msgstr ""

