# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the WebSockets Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: WebSockets Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-13 22:19+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/socket.io/docs/info.rst:2
msgid "introduce"
msgstr ""

#: ../../source/socket.io/docs/info.rst:5
msgid "What Socket.IO is"
msgstr ""

#: ../../source/socket.io/docs/info.rst:7
msgid "Socket.IO is a library that enables real-time, bidirectional and event-based communication between the browser and the server. It consists of:"
msgstr ""

#: ../../source/socket.io/docs/info.rst:11
msgid "a Node.js server: `Source <https://github.com/socketio/socket.io>`_ \\| `API </docs/server-api/>`_"
msgstr ""

#: ../../source/socket.io/docs/info.rst:13
msgid "a Javascript client library for the browser (which can be also run from Node.js): `Source <https://github.com/socketio/socket.io-client>`_ \\| `API </docs/client-api/>`_"
msgstr ""

#: ../../source/socket.io/docs/info.rst:18
msgid "Its main features are:"
msgstr ""

#: ../../source/socket.io/docs/info.rst:21
msgid "Reliability"
msgstr ""

#: ../../source/socket.io/docs/info.rst:23
msgid "Connections are established even in the presence of:"
msgstr ""

#: ../../source/socket.io/docs/info.rst:25
msgid "proxies and load balancers."
msgstr ""

#: ../../source/socket.io/docs/info.rst:26
msgid "personal firewall and antivirus software."
msgstr ""

#: ../../source/socket.io/docs/info.rst:28
msgid "For this purpose, it relies on `Engine.IO <https://github.com/socketio/engine.io>`_, which first establishes a long-polling connection, then tries to upgrade to better transports that are “tested” on the side, like WebSocket. Please see the `Goals <https://github.com/socketio/engine.io#goals>`_ section for more information."
msgstr ""

#: ../../source/socket.io/docs/info.rst:36
msgid "Auto-reconnection support"
msgstr ""

#: ../../source/socket.io/docs/info.rst:38
msgid "Unless instructed otherwise a disconnected client will try to reconnect forever, until the server is available again. Please see the available reconnection options `here <https://socket.io/docs/client-api/#new-Manager-url-options>`_."
msgstr ""

#: ../../source/socket.io/docs/info.rst:44
msgid "Disconnection detection"
msgstr ""

#: ../../source/socket.io/docs/info.rst:46
msgid "A heartbeat mechanism is implemented at the Engine.IO level, allowing both the server and the client to know when the other one is not responding anymore."
msgstr ""

#: ../../source/socket.io/docs/info.rst:50
msgid "That functionality is achieved with timers set on both the server and the client, with timeout values (the pingInterval and pingTimeout parameters) shared during the connection handshake. Those timers require any subsequent client calls to be directed to the same server, hence the sticky-session requirement when using multiples nodes."
msgstr ""

#: ../../source/socket.io/docs/info.rst:57
msgid "Binary support"
msgstr ""

#: ../../source/socket.io/docs/info.rst:59
msgid "Any serializable data structures can be emitted, including:"
msgstr ""

#: ../../source/socket.io/docs/info.rst:61
msgid "`ArrayBuffer <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer>`_ and `Blob <https://developer.mozilla.org/en-US/docs/Web/API/Blob>`_ in the browser"
msgstr ""

#: ../../source/socket.io/docs/info.rst:64
msgid "`ArrayBuffer <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer>`_ and `Buffer <https://nodejs.org/api/buffer.html>`_ in Node.js"
msgstr ""

#: ../../source/socket.io/docs/info.rst:68
msgid "Multiplexing support"
msgstr ""

#: ../../source/socket.io/docs/info.rst:70
msgid "In order to create separation of concerns within your application (for example per module, or based on permissions), Socket.IO allows you to create several `Namespaces </docs/rooms-and-namespaces/#Namespaces>`_, which will act as separate communication channels but will share the same underlying connection."
msgstr ""

#: ../../source/socket.io/docs/info.rst:77
msgid "Room support"
msgstr ""

#: ../../source/socket.io/docs/info.rst:79
msgid "Within each `Namespace </docs/rooms-and-namespaces/#Namespaces>`_, you can define arbitrary channels, called `Rooms </docs/rooms-and-namespaces/#Rooms>`_, that sockets can join and leave. You can then broadcast to any given room, reaching every socket that has joined it."
msgstr ""

#: ../../source/socket.io/docs/info.rst:85
msgid "This is a useful feature to send notifications to a group of users, or to a given user connected on several devices for example."
msgstr ""

#: ../../source/socket.io/docs/info.rst:88
msgid "Those features come with a simple and convenient API, which looks like the following:"
msgstr ""

#: ../../source/socket.io/docs/info.rst:100
msgid "What Socket.IO is not"
msgstr ""

#: ../../source/socket.io/docs/info.rst:102
msgid "Socket.IO is **NOT** a WebSocket implementation. Although Socket.IO indeed uses WebSocket as a transport when possible, it adds some metadata to each packet: the packet type, the namespace and the ack id when a message acknowledgement is needed. That is why a WebSocket client will not be able to successfully connect to a Socket.IO server, and a Socket.IO client will not be able to connect to a WebSocket server either. Please see the protocol specification `here <https://github.com/socketio/socket.io-protocol>`_."
msgstr ""

#: ../../source/socket.io/docs/info.rst:117
msgid "Installing"
msgstr ""

#: ../../source/socket.io/docs/info.rst:120
#: ../../source/socket.io/docs/info.rst:260
#: ../../source/socket.io/docs/info.rst:418
msgid "Server"
msgstr ""

#: ../../source/socket.io/docs/info.rst:126
msgid "`Source <https://github.com/socketio/socket.io>`_"
msgstr ""

#: ../../source/socket.io/docs/info.rst:129
msgid "Javascript Client"
msgstr ""

#: ../../source/socket.io/docs/info.rst:131
msgid "A standalone build of the client is exposed by default by the server at ``/socket.io/socket.io.js``."
msgstr ""

#: ../../source/socket.io/docs/info.rst:134
msgid "It can also be served from a CDN, like `cdnjs <https://cdnjs.com/libraries/socket.io>`_."
msgstr ""

#: ../../source/socket.io/docs/info.rst:137
msgid "To use it from Node.js, or with a bundler like `webpack <https://webpack.js.org/>`_ or `browserify <http://browserify.org/>`_, you can also install the package from npm:"
msgstr ""

#: ../../source/socket.io/docs/info.rst:146
msgid "`Source <https://github.com/socketio/socket.io-client>`_"
msgstr ""

#: ../../source/socket.io/docs/info.rst:149
msgid "Other client implementations"
msgstr ""

#: ../../source/socket.io/docs/info.rst:151
msgid "There are several client implementations in other languages, which are maintained by the community:"
msgstr ""

#: ../../source/socket.io/docs/info.rst:154
msgid "Java: https://github.com/socketio/socket.io-client-java"
msgstr ""

#: ../../source/socket.io/docs/info.rst:155
msgid "C++: https://github.com/socketio/socket.io-client-cpp"
msgstr ""

#: ../../source/socket.io/docs/info.rst:156
msgid "Swift: https://github.com/socketio/socket.io-client-swift"
msgstr ""

#: ../../source/socket.io/docs/info.rst:157
msgid "Dart: https://github.com/rikulo/socket.io-client-dart"
msgstr ""

#: ../../source/socket.io/docs/info.rst:158
msgid "Python: https://github.com/miguelgrinberg/python-socketio"
msgstr ""

#: ../../source/socket.io/docs/info.rst:159
msgid ".Net: https://github.com/Quobject/SocketIoClientDotNet"
msgstr ""

#: ../../source/socket.io/docs/info.rst:162
msgid "Using with Node http server"
msgstr ""

#: ../../source/socket.io/docs/info.rst:165
#: ../../source/socket.io/docs/info.rst:213
#: ../../source/socket.io/docs/info.rst:293
#: ../../source/socket.io/docs/info.rst:380
#: ../../source/socket.io/docs/info.rst:435
msgid "Server (app.js)"
msgstr ""

#: ../../source/socket.io/docs/info.rst:196
#: ../../source/socket.io/docs/info.rst:238
#: ../../source/socket.io/docs/info.rst:318
#: ../../source/socket.io/docs/info.rst:395
#: ../../source/socket.io/docs/info.rst:447
msgid "Client (index.html)"
msgstr ""

#: ../../source/socket.io/docs/info.rst:210
msgid "Using with Express"
msgstr ""

#: ../../source/socket.io/docs/info.rst:252
msgid "Sending and receiving events"
msgstr ""

#: ../../source/socket.io/docs/info.rst:254
msgid "Socket.IO allows you to emit and receive custom events. Besides ``connect``, ``message`` and ``disconnect``, you can emit custom events:"
msgstr ""

#: ../../source/socket.io/docs/info.rst:280
msgid "Restricting yourself to a namespace"
msgstr ""

#: ../../source/socket.io/docs/info.rst:282
msgid "If you have control over all the messages and events emitted for a particular application, using the default / namespace works. If you want to leverage 3rd-party code, or produce code to share with others, socket.io provides a way of namespacing a socket."
msgstr ""

#: ../../source/socket.io/docs/info.rst:287
msgid "This has the benefit of ``multiplexing`` a single connection. Instead of socket.io using two ``WebSocket`` connections, it’ll use one."
msgstr ""

#: ../../source/socket.io/docs/info.rst:336
msgid "Sending volatile messages"
msgstr ""

#: ../../source/socket.io/docs/info.rst:338
msgid "Sometimes certain messages can be dropped. Let’s say you have an app that shows realtime tweets for the keyword ``bieber``."
msgstr ""

#: ../../source/socket.io/docs/info.rst:341
msgid "If a certain client is not ready to receive messages (because of network slowness or other issues, or because they’re connected through long polling and is in the middle of a request-response cycle), if it doesn’t receive ALL the tweets related to bieber your application won’t suffer."
msgstr ""

#: ../../source/socket.io/docs/info.rst:346
msgid "In that case, you might want to send those messages as volatile messages."
msgstr ""

#: ../../source/socket.io/docs/info.rst:349
msgid "**Server**"
msgstr ""

#: ../../source/socket.io/docs/info.rst:368
msgid "Sending and getting data (acknowledgements)"
msgstr ""

#: ../../source/socket.io/docs/info.rst:370
msgid "Sometimes, you might want to get a callback when the client confirmed the message reception."
msgstr ""

#: ../../source/socket.io/docs/info.rst:373
msgid "To do this, simply pass a function as the last parameter of ``.send`` or ``.emit``. What’s more, when you use ``.emit``, the acknowledgement is done by you, which means you can also pass data along:"
msgstr ""

#: ../../source/socket.io/docs/info.rst:409
msgid "Broadcasting messages"
msgstr ""

#: ../../source/socket.io/docs/info.rst:411
msgid "To broadcast, simply add a ``broadcast`` flag to ``emit`` and ``send`` method calls. Broadcasting means sending a message to everyone else except for the socket that starts it."
msgstr ""

#: ../../source/socket.io/docs/info.rst:429
msgid "Using it just as a cross-browser WebSocket"
msgstr ""

#: ../../source/socket.io/docs/info.rst:431
msgid "If you just want the WebSocket semantics, you can do that too. Simply leverage ``send`` and listen on the ``message`` event:"
msgstr ""

#: ../../source/socket.io/docs/info.rst:462
msgid "If you don’t care about reconnection logic and such, take a look at Engine.IO, which is the WebSocket semantics transport layer Socket.IO uses."
msgstr ""

