# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the WebSockets Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: WebSockets Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-17 11:04+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/socket.io/server-api/Socket.rst:3
msgid "Socket"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:5
msgid "A ``Socket`` is the fundamental class for interacting with browser clients. A ``Socket`` belongs to a certain ``Namespace`` (by default ``/``) and uses an underlying ``Client`` to communicate."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:9
msgid "It should be noted the ``Socket`` doesn’t relate directly to the actual underlying TCP/IP ``socket`` and it is only the name of the class."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:12
msgid "Within each ``Namespace``, you can also define arbitrary channels (called ``room``) that the ``Socket`` can join and leave. That provides a convenient way to broadcast to a group of ``Socket``\\ s (see ``Socket#to`` below)."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:17
msgid "The ``Socket`` class inherits from `EventEmitter <https://nodejs.org/api/events.html#events_class_eventemitter>`_. The ``Socket`` class overrides the ``emit`` method, and does not modify any other ``EventEmitter`` method. All methods documented here which also appear as ``EventEmitter`` methods (apart from ``emit``) are implemented by ``EventEmitter``, and documentation for ``EventEmitter`` applies."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:27
msgid "*(String)*"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:29
msgid "A unique identifier for the session, that comes from the underlying ``Client``."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:34
#: ../../source/socket.io/server-api/Socket.rst:72
msgid "*(Object)*"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:36
msgid "A hash of strings identifying the rooms this client is in, indexed by room name."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:50
msgid "*(Client)*"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:52
msgid "A reference to the underlying ``Client`` object."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:56
msgid "*(engine.Socket)*"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:58
msgid "A reference to the underlying ``Client`` transport connection (engine.io ``Socket`` object). This allows access to the IO transport layer, which still (mostly) abstracts the actual TCP/IP socket."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:64
msgid "*(Request)*"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:66
msgid "A getter proxy that returns the reference to the ``request`` that originated the underlying engine.io ``Client``. Useful for accessing request headers such as ``Cookie`` or ``User-Agent``."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:74
msgid "The handshake details:"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:89
msgid "Usage:"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:105
msgid "``fn`` *(Function)*"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:107
msgid "Registers a middleware, which is a function that gets executed for every incoming ``Packet`` and receives as parameter the packet and a function to optionally defer execution to the next registered middleware."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:111
msgid "Errors passed to middleware callbacks are sent as special ``error`` packets to clients."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:126
msgid "``args``"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:127
msgid "``ack`` *(Function)*"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:128
#: ../../source/socket.io/server-api/Socket.rst:308
msgid "**Returns** ``Socket``"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:130
msgid "Sends a ``message`` event. See `socket.emit(eventName[, …args][, ack]) <#socketemiteventname-args-ack>`_."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:135
msgid "*(overrides ``EventEmitter.emit``)* - ``eventName`` *(String)* - ``args`` - ``ack`` *(Function)* - **Returns** ``Socket``"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:138
msgid "Emits an event to the socket identified by the string name. Any other parameters can be included. All serializable datastructures are supported, including ``Buffer``."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:147
msgid "The ``ack`` argument is optional and will be called with the client’s answer."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:168
msgid "*(inherited from ``EventEmitter``)* - ``eventName`` *(String)* - ``callback`` *(Function)* - **Returns** ``Socket``"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:171
msgid "Register a new handler for the given event."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:197
msgid "Inherited from ``EventEmitter`` (along with other methods not mentioned here). See Node.js documentation for the ``events`` module."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:202
#: ../../source/socket.io/server-api/Socket.rst:247
#: ../../source/socket.io/server-api/Socket.rst:258
msgid "``room`` *(String)*"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:203
#: ../../source/socket.io/server-api/Socket.rst:239
#: ../../source/socket.io/server-api/Socket.rst:248
msgid "``callback`` *(Function)*"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:204
#: ../../source/socket.io/server-api/Socket.rst:240
#: ../../source/socket.io/server-api/Socket.rst:249
#: ../../source/socket.io/server-api/Socket.rst:259
#: ../../source/socket.io/server-api/Socket.rst:293
msgid "**Returns** ``Socket`` for chaining"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:206
msgid "Adds the client to the ``room``, and fires optionally a callback with ``err`` signature (if any)."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:219
msgid "The mechanics of joining rooms are handled by the ``Adapter`` that has been configured (see ``Server#adapter`` above), defaulting to `socket.io-adapter <https://github.com/socketio/socket.io-adapter>`_."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:223
msgid "For your convenience, each socket automatically joins a room identified by its id (see ``Socket#id``). This makes it easy to broadcast messages to other sockets:"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:238
msgid "``rooms`` *(Array)*"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:242
msgid "Adds the client to the list of room, and fires optionally a callback with ``err`` signature (if any)."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:251
msgid "Removes the client from ``room``, and fires optionally a callback with ``err`` signature (if any)."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:254
msgid "**Rooms are left automatically upon disconnection**."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:261
msgid "Sets a modifier for a subsequent event emission that the event will only be *broadcasted* to clients that have joined the given ``room`` (the socket itself being excluded)."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:265
msgid "To emit to multiple rooms, you can call ``to`` several times."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:284
msgid "acknowledgements are not supported when broadcasting."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:288
msgid "Synonym of `socket.to(room) <#socket-to-room>`_."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:292
msgid "``value`` *(Boolean)* whether to following packet will be compressed"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:295
msgid "Sets a modifier for a subsequent event emission that the event data will only be *compressed* if the value is ``true``. Defaults to ``true`` when you don’t call the method."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:307
msgid "``close`` *(Boolean)* whether to close the underlying connection"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:310
msgid "Disconnects this client. If value of close is ``true``, closes the underlying connection. Otherwise, it just disconnects the namespace."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:321
msgid "Sets a modifier for a subsequent event emission that the event data will only be *broadcast* to every sockets but the sender."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:334
msgid "Sets a modifier for a subsequent event emission that the event data may be lost if the client is not ready to receive messages (because of network slowness or other issues, or because they’re connected through long polling and is in the middle of a request-response cycle)."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:349
msgid "Specifies whether there is binary data in the emitted data. Increases performance when specified. Can be ``true`` or ``false``."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:361
#: ../../source/socket.io/server-api/Socket.rst:415
msgid "``reason`` *(String)* the reason of the disconnection (either client or server-side)"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:364
msgid "Fired upon disconnection."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:374
msgid "Possible reasons:"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:377
msgid "Reason"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:377
msgid "Side"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:377
msgid "Description"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:379
msgid "``transport err or``"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:379
#: ../../source/socket.io/server-api/Socket.rst:382
msgid "Server Side"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:379
msgid "Transport error"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:382
msgid "``server namesp ace disconnect``"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:382
msgid "Server performs a ``socket.disconnect()``"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:386
msgid "``client namesp ace disconnect``"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:386
#: ../../source/socket.io/server-api/Socket.rst:390
#: ../../source/socket.io/server-api/Socket.rst:394
msgid "Client Side"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:386
msgid "Got disconnect packet from client"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:390
msgid "``ping timeout``"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:390
msgid "Client stopped responding to pings in the allowed amount of time (per the ``pingTimeout`` config setting)"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:394
msgid "``transport clo se``"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:394
msgid "Client stopped sending data"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:401
msgid "``error`` *(Object)* error object"
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:403
msgid "Fired when an error occurs."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:418
msgid "Fired when the client is going to be disconnected (but hasn’t left its ``rooms`` yet)."
msgstr ""

#: ../../source/socket.io/server-api/Socket.rst:430
msgid "These are reserved events (along with ``connect``, ``newListener`` and ``removeListener``) which cannot be used as event names."
msgstr ""

