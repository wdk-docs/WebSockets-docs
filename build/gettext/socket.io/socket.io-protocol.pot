# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the WebSockets Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: WebSockets Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-17 11:24+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/socket.io/socket.io-protocol.rst:3
msgid "socket.io-protocol"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:5
msgid "This document describes the Socket.IO protocol. For a reference JavaScript implementation, take a look at `socket.io-parser <https://github.com/learnboost/socket.io-parser>`_, `socket.io-client <https://github.com/learnboost/socket.io-client>`_ and `socket.io <https://github.com/learnboost/socket.io>`_."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:12
msgid "Protocol version"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:14
msgid "**Current protocol revision:** `4`."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:17
msgid "Parser API"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:20
msgid "Parser#Encoder"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:22
msgid "An object that encodes socket.io packets to engine.io-transportable form. Its only public method is Encoder#encode."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:26
msgid "Encoder#encode(Object:packet, Function:callback)"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:28
msgid "Encodes a `Packet` object into an array of engine.io-compatible encodings. If the object is pure JSON the array will contain a single item, a socket.io encoded string. If the object contains binary data (ArrayBuffer, Buffer, Blob, or File) the array's first item will be a string with packet-relevant metadata and JSON with placeholders where the binary data was held in the initial packet. The remaining items will be the raw binary data to fill in the placeholders post-decoding."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:36
msgid "The callback function is called with the encoded array as its only argument. In the socket.io-parser implementation, the callback writes each item in the array to engine.io for transport. The expectation for any implementation is that each item in the array is transported sequentially."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:42
msgid "Parser#Decoder"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:45
msgid "An object that decodes data from engine.io into complete socket.io packets."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:47
msgid "The expected workflow for using the Decoder is to call the `Decoder#add` method upon receiving any encoding from engine.io (in the sequential order in which the encodings are received) and to listen to the Decoder's 'decoded' events to handle fully decoded packets."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:53
msgid "Decoder#add(Object:encoding)"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:55
msgid "Decodes a single encoded object from engine.io transport. In the case of a non-binary packet, the one encoding argument is used to reconstruct the full packet. If the packet is of type `BINARY_EVENT` or `ACK`, then additional calls to add are expected, one for each piece of binary data in the original packet. Once the final binary data encoding is passed to add, the full socket.io packet is reconstructed."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:62
msgid "After a packet is fully decoded, the Decoder emits a 'decoded' event (via Emitter) with the decoded packet as the sole argument. Listeners to this event should treat the packet as ready-to-go."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:67
msgid "Decoder#destroy()"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:69
msgid "Deallocates the Decoder instance's resources. Should be called in the event of a disconnect mid-decoding, etc. to prevent memory leaks."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:73
msgid "Parser#types"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:76
msgid "Array of packet type keys."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:79
msgid "Packet"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:82
msgid "Each packet is represented as a vanilla `Object` with a `nsp` key that indicates what namespace it belongs to (see \"Multiplexing\") and a `type` key that can be one of the following:"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:86
msgid "`Packet#CONNECT` (`0`)"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:87
msgid "`Packet#DISCONNECT` (`1`)"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:88
msgid "`Packet#EVENT` (`2`)"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:89
msgid "`Packet#ACK` (`3`)"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:90
msgid "`Packet#ERROR` (`4`)"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:91
msgid "`Packet#BINARY_EVENT` (`5`)"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:92
msgid "`Packet#BINARY_ACK` (`6`)"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:95
msgid "EVENT"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:97
msgid "`data` (`Array`) a list of arguments, the first of which is the event name. Arguments can contain any type of field that can result of `JSON` decoding, including objects and arrays of arbitrary size."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:99
msgid "`id` (`Number`) if the `id` identifier is present, it indicates that the server wishes to be acknowledged of the reception of this event."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:102
msgid "BINARY_EVENT"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:104
msgid "`data` (`Array`) see `EVENT` `data`, but with addition that any of the arguments may contain non-JSON arbitrary binary data. For encoding, binary data is considered either a Buffer, ArrayBuffer, Blob, or File. When decoding, all binary data server-side is a Buffer; on modern clients binary data is an ArrayBuffer. On older browsers that don't support binary, every binary data item is replaced with an object like so: `{base64: true, data: <base64_bin_encoding>}`. When a `BINARY_EVENT` or `ACK` packet is initially decoded, all of the binary data items will be placeholders, and will be filled by additional calls to `Decoder#add`."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:106
#: ../../source/socket.io/socket.io-protocol.rst:112
#: ../../source/socket.io/socket.io-protocol.rst:118
msgid "`id` (`Number`) see `EVENT` `id`."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:109
msgid "ACK"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:111
msgid "`data` (`Array`) see `EVENT` `data`. Encoded as string like the `EVENT` type above. Should be used when an ACK function is not called with binary data."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:115
msgid "BINARY_ACK"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:117
msgid "`data` (`Array`) see `ACK` `data`. Used when the arguments for an ACK function contain binary data; encodes packet in the `BINARY_EVENT` style documented above."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:121
msgid "ERROR"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:123
msgid "`data` (`Mixed`) error data"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:126
msgid "Transport"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:127
msgid "The socket.io protocol can be delivered over a variety of transports. `socket.io-client <http://github.com/learnboost/socket.io-client>`_"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:130
msgid "is the implementation of the protocol for the browser and Node.JS over `engine.io-client <http://github.com/learnboost/engine.io-client>`_."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:133
msgid "`socket.io <http://github.com/learnboost/socket.io>`_ is the server implementation of the protocol over `engine.io <http://github.com/learnboost/engine.io>`_."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:138
msgid "Multiplexing"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:140
msgid "Socket.IO has built-in multiplexing support, which means that each packet always belongs to a given `namespace`, identified by a path string (like `/this`). The corresponding key in the `Packet` object is `nsp`."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:144
msgid "When the socket.io transport connection is established, a connection attempt to the `/` namespace is assumed (ie: the server behaves as if the client had sent a `CONNECT` packet to the `/` namespace)."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:148
msgid "In order to support multiplexing of multiple sockets under the same transport, additional `CONNECT` packets can be sent by the client to arbitrary namespace URIs (eg: `/another`)."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:152
msgid "When the server responds with a `CONNECT` packet to the corresponding namespace, the multiplexed socket is considered connected."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:155
msgid "Alternatively, the server can respond with an `ERROR` packet to indicate a multiplexed socket connection error, such as authentication errors. The associated error payload varies according to each error, and can be user-defined."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:160
msgid "After a `CONNECT` packet is received by the server for a given `nsp`, the client can then send and receive `EVENT` packets. If any of the parties receives an `EVENT` packet with an `id` field, an `ACK` packet is expected to confirm the reception of said packet."
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:166
msgid "License"
msgstr ""

#: ../../source/socket.io/socket.io-protocol.rst:168
msgid "MIT"
msgstr ""

