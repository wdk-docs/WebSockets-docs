# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the WebSockets Docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: WebSockets Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-13 19:54+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/awesome.rst:2
msgid "Awesome WebSockets"
msgstr "令人敬畏的WebSockets"

#: ../../source/awesome.rst:4
msgid "A curated list of WebSockets related principles and technologies."
msgstr "WebSockets相关原理和技术的精选列表。"

#: ../../source/awesome.rst:6
msgid ""
"`WebSocket <https://en.wikipedia.org/wiki/WebSocket>`_ is a computer "
"communications protocol, providing full-duplex communication channels "
"over a single TCP connection. The WebSocket protocol was standardized by "
"the IETF as RFC 6455 in 2011, and the WebSocket API in Web IDL is being "
"standardized by the W3C."
msgstr "`WebSocket <https://en.wikipedia.org/wiki/WebSocket>`_ 是一种计算机通信协议，通过单个TCP连接提供全双工通信信道。 WebSocket协议在2011年由IETF标准化为RFC 6455，Web IDL中的WebSocket API由W3C标准化。"

#: ../../source/awesome.rst:13
msgid "Tools per Language"
msgstr "每种语言的工具"

#: ../../source/awesome.rst:16
msgid "Agnostic"
msgstr "Agnostic"

#: ../../source/awesome.rst:18
msgid ""
"`Websocketd <http://websocketd.com>`_ - WebSockets the UNIX way - Full "
"duplex messaging between web browsers and servers."
msgstr "`Websocketd <http://websocketd.com>`_ - UNIX方式的WebSockets  -  Web浏览器和服务器之间的全双工消息传递。"

#: ../../source/awesome.rst:20
msgid ""
"`Nchan <https://nchan.slact.net>`_ - Nchan is a scalable, flexible "
"pub/sub server for the modern web, built as a module for the Nginx web "
"server."
msgstr "`Nchan <https://nchan.slact.net>`_ - Nchan是一个可扩展，灵活的现代Web发布/订阅服务器，构建为Nginx Web服务器的模块。"

#: ../../source/awesome.rst:23
msgid ""
"`Apache-websocket <https://github.com/disconnect/apache-websocket>`_ - "
"Apache WebSocket module."
msgstr "`Apache-websocket <https://github.com/disconnect/apache-websocket>`_ - Apache WebSocket模块。"

#: ../../source/awesome.rst:25
msgid ""
"`MinnowServer <https://github.com/RealTimeLogic/MinnowServer>`_ - A super"
" small and fast embedded HTTP(S) WebSocket server."
msgstr "`MinnowServer <https://github.com/RealTimeLogic/MinnowServer>`_ - 超小型快速嵌入式HTTP（S）WebSocket服务器。"

#: ../../source/awesome.rst:27
msgid ""
"`gwsocket <https://github.com/allinurl/gwsocket>`_ - Fast, standalone, "
"language-agnostic WebSocket server RFC6455 compliant."
msgstr "`gwsocket <https://github.com/allinurl/gwsocket>`_ - 快速，独立，与语言无关的WebSocket服务器RFC6455兼容。"

#: ../../source/awesome.rst:31
msgid "C"
msgstr "C"

#: ../../source/awesome.rst:33
msgid ""
"`Libwebsockets <https://libwebsockets.org>`_ - It’s a lightweight pure C "
"library built to use minimal CPU and memory resources, and provide fast "
"throughput in both directions as client or server."
msgstr "`Libwebsockets <https://libwebsockets.org>`_ - 它是一个轻量级的纯C库，可以使用最少的CPU和内存资源，并在客户端或服务器的两个方向上提供快速吞吐量。"

#: ../../source/awesome.rst:36
msgid ""
"`Libwebsock <https://github.com/payden/libwebsock>`_ - C library for easy"
" WebSockets server."
msgstr "`Libwebsock <https://github.com/payden/libwebsock>`_ - 用于简易WebSockets服务器的C库。"

#: ../../source/awesome.rst:38
msgid ""
"`Websocket <https://github.com/mortzdk/Websocket>`_ - Websocket server "
"written in C."
msgstr "`Websocket <https://github.com/mortzdk/Websocket>`_ - 用C编写的Websocket服务器"

#: ../../source/awesome.rst:40
msgid ""
"`facil.io <http://facil.io>`_ - A server/framework library for web "
"applications, including Websockets and native pub/sub."
msgstr "`facil.io <http://facil.io>`_ - 用于Web应用程序的服务器/框架库，包括Websockets和本机 pub/sub 。"

#: ../../source/awesome.rst:42
msgid ""
"`libuwsc <https://github.com/zhaojh329/libuwsc>`_ - A Lightweight and "
"fully asynchronous WebSocket client C library based on libubox for "
"Embedded Linux."
msgstr "`libuwsc <https://github.com/zhaojh329/libuwsc>`_ - 基于libubox for Embedded Linux的轻量级和完全异步的WebSocket客户端C库。"

#: ../../source/awesome.rst:45
msgid ""
"`mongoose <https://github.com/cesanta/mongoose>`_ - Mongoose Embedded Web"
" Server Library - Mongoose is more than an embedded webserver. It is a "
"multi-protocol embedded networking library with functions including TCP, "
"HTTP client and server, WebSocket client and server, MQTT client and "
"broker and much more."
msgstr "`mongoose <https://github.com/cesanta/mongoose>`_ - Mongoose嵌入式Web服务器库 - Mongoose不仅仅是一个嵌入式网络服务器。它是一个多协议嵌入式网络库，具有TCP，HTTP客户端和服务器，WebSocket客户端和服务器，MQTT客户端和代理等功能。"

#: ../../source/awesome.rst:54
msgid "C++"
msgstr "C++"

#: ../../source/awesome.rst:60
msgid ""
"`Websocketpp <https://github.com/zaphoyd/websocketpp>`_ - C++ Websocket "
"client/server library."
msgstr "`Websocketpp <https://github.com/zaphoyd/websocketpp>`_ - C ++ Websocket客户端/服务器库。"

#: ../../source/awesome.rst:62
msgid ""
"`QtWebSockets <http://wiki.qt.io/QtWebSockets>`_ - The QtWebSockets "
"module is an add-on for the Qt5 library."
msgstr "`QtWebSockets <http://wiki.qt.io/QtWebSockets>`_ - QtWebSockets模块是Qt5库的附加组件。"

#: ../../source/awesome.rst:64
msgid ""
"`Beast <https://github.com/boostorg/beast>`_ - HTTP and WebSocket built "
"on Boost.Asio in C++11."
msgstr "`Beast <https://github.com/boostorg/beast>`_ - HTTP和WebSocket构建于C ++ 11中的Boost.Asio上。"

#: ../../source/awesome.rst:66
msgid ""
"`µWebSockets <https://github.com/uNetworking/uWebSockets>`_ - Highly "
"scalable WebSocket server & client library."
msgstr "`µWebSockets <https://github.com/uNetworking/uWebSockets>`_ - 高度可扩展的WebSocket服务器和客户端库。"

#: ../../source/awesome.rst:68
msgid ""
"`Simple-WebSocket-Server <https://github.com/eidheim/Simple-WebSocket-"
"Server>`_ - A very simple, fast, multithreaded, platform independent "
"WebSocket (WS) and WebSocket Secure (WSS) server and client library "
"implemented using C++11, Boost.Asio and OpenSSL."
msgstr "`简单的WebSocket，服务器 <https://github.com/eidheim/Simple-WebSocket-Server>`_ - 一个非常简单，快速，多线程，独立于平台的WebSocket（WS）和WebSocket安全（WSS）服务器和客户端库，使用C ++ 11，Boost.Asio和OpenSSL实现。"

#: ../../source/awesome.rst:72
msgid ""
"`UEWebsocket <https://github.com/feixuwu/UEWebsocket>`_ - Unreal engine 4"
" websocket plugin for both c++ and blueprint developer."
msgstr "`UEWebsocket <https://github.com/feixuwu/UEWebsocket>`_ - 适用于c ++和蓝图开发人员的虚幻引擎4 websocket插件。"

#: ../../source/awesome.rst:74
msgid ""
"`IXWebSocket <https://github.com/machinezone/IXWebSocket>`_ - Lightweight"
" C++11 multi-threaded client library with TLS support."
msgstr "`IXWebSocket <https://github.com/machinezone/IXWebSocket>`_ - 支持TLS的轻量级C ++ 11多线程客户端库。"

#: ../../source/awesome.rst:80
msgid "C#"
msgstr "C#"

#: ../../source/awesome.rst:86
msgid ""
"`ASP.NET SignalR <http://signalr.net>`_ - Incredibly simple real-time web"
" for .NET."
msgstr "`ASP.NET SignalR <http://signalr.net>`_ - 令人难以置信的简单的.NET实时网络。"

#: ../../source/awesome.rst:88
msgid ""
"`WebSocketListener <http://vtortola.github.io/WebSocketListener>`_ - "
"Lightweight and highly scalable asynchronous WebSocket server for "
".NET/Mono."
msgstr "`WebSocketListener <http://vtortola.github.io/WebSocketListener>`_ - 用于.NET / Mono的轻量级且高度可扩展的异步WebSocket服务器。"

#: ../../source/awesome.rst:91
msgid ""
"`websocket-rpc <https://github.com/dajuric/websocket-rpc>`_ - WebSocket "
"RPC library for .NET with auto JavaScript client code generation, "
"supporting ASP.NET Core."
msgstr "`websocket-rpc <https://github.com/dajuric/websocket-rpc>`_ - 用于.NET的WebSocket RPC库，具有自动JavaScript客户端代码生成功能，支持ASP.NET Core。"

#: ../../source/awesome.rst:94
msgid ""
"`NetGain <https://github.com/StackExchange/NetGain>`_ - A high "
"performance websocket server library powering Stack Overflow."
msgstr "`NetGain <https://github.com/StackExchange/NetGain>`_ - 一个支持Stack Overflow的高性能websocket服务器库。"

#: ../../source/awesome.rst:96
msgid ""
"`websocket-manager <https://github.com/radu-matei/websocket-manager>`_ - "
"Real-Time library for ASP .NET Core."
msgstr "`websocket-manager <https://github.com/radu-matei/websocket-manager>`_ - ASP .NET Core的实时库。"

#: ../../source/awesome.rst:98
msgid ""
"`WebSockets <https://github.com/aspnet/WebSockets>`_ - Implementation of "
"the WebSocket protocol, along with client and server integration "
"components."
msgstr "`WebSockets <https://github.com/aspnet/WebSockets>`_ - WebSocket协议的实现，以及客户端和服务器集成组件。"

#: ../../source/awesome.rst:101
msgid ""
"`WebSockets support in ASP.NET Core <https://docs.microsoft.com/en-"
"us/aspnet/core/fundamentals/websockets?view=aspnetcore-2.1>`_ - This "
"article explains how to get started with WebSockets in ASP.NET Core."
msgstr "`WebSockets support in ASP.NET Core <https://docs.microsoft.com/en-us/aspnet/core/fundamentals/websockets?view=aspnetcore-2.1>`_ - 本文介绍如何在ASP.NET Core中开始使用WebSockets。"

#: ../../source/awesome.rst:107
msgid "Erlang"
msgstr "Erlang"

#: ../../source/awesome.rst:109
msgid ""
"`Sockjs-erlang <https://github.com/sockjs/sockjs-erlang>`_ - WebSocket "
"emulation - Erlang server."
msgstr "`Sockjs-erlang <https://github.com/sockjs/sockjs-erlang>`_ - WebSocket仿真 -  Erlang服务器。"

#: ../../source/awesome.rst:111
msgid ""
"`Cowboy <https://github.com/ninenines/cowboy>`_ - Small, fast, modular "
"HTTP server written in Erlang."
msgstr "`Cowboy <https://github.com/ninenines/cowboy>`_ - 用Erlang编写的小型，快速，模块化的HTTP服务器。"

#: ../../source/awesome.rst:113
msgid ""
"`Kraken <https://github.com/Asana/kraken>`_ - Distributed Pubsub Server "
"for Realtime Apps."
msgstr "`Kraken <https://github.com/Asana/kraken>`_ - 用于实时应用程序的分布式Pubsub服务器。"

#: ../../source/awesome.rst:117
msgid "Go"
msgstr "Go"

#: ../../source/awesome.rst:119
msgid ""
"`Gorilla Websocket <https://github.com/gorilla/websocket>`_ - WebSocket "
"implementation for Go."
msgstr "`Gorilla Websocket <https://github.com/gorilla/websocket>`_ - Go的WebSocket实现。"

#: ../../source/awesome.rst:121
msgid ""
"`Websocket <https://godoc.org/golang.org/x/net/websocket>`_ - Package "
"Websocket implements a client and server for the WebSocket protocol as "
"specified in RFC 6455."
msgstr "`Websocket <https://godoc.org/golang.org/x/net/websocket>`_ - Package Websocket实现了RFC 6455中指定的WebSocket协议的客户端和服务器。"

#: ../../source/awesome.rst:124
msgid "`Ws <https://github.com/gobwas/ws>`_ - Tiny WebSocket library for Go."
msgstr "`Ws <https://github.com/gobwas/ws>`_ - Go的Tiny WebSocket库。"

#: ../../source/awesome.rst:126
msgid ""
"`1m-go-websockets <https://github.com/eranyanay/1m-go-websockets>`_ - "
"Handling 1M websockets connections in Go."
msgstr "`1m-go-websockets <https://github.com/eranyanay/1m-go-websockets>`_ - 在Go中处理1M websockets连接。"

#: ../../source/awesome.rst:128
msgid ""
"`gotify/server <https://gotify.net/>`_ - A simple server for sending and "
"receiving messages in real-time per web socket."
msgstr "`gotify/server <https://gotify.net/>`_ - 一个简单的服务器，用于每个Web套接字实时发送和接收消息。"

#: ../../source/awesome.rst:130
msgid ""
"`nhooyr/websocket <hhttps://github.com/nhooyr/websocket>`_ - A minimal "
"and idiomatic WebSocket library for Go."
msgstr "`nhooyr/websocket <hhttps://github.com/nhooyr/websocket>`_ - Go的最小和惯用的WebSocket库。"

#: ../../source/awesome.rst:134
msgid "Haskell"
msgstr "Haskell"

#: ../../source/awesome.rst:136
msgid ""
"`Websockets <https://github.com/jaspervdj/websockets>`_ - A Haskell "
"library for creating WebSocket-capable servers."
msgstr "`Websockets <https://github.com/jaspervdj/websockets>`_ - 用于创建支持WebSocket的服务器的Haskell库。"

#: ../../source/awesome.rst:140
msgid "Java VM"
msgstr "Java VM"

#: ../../source/awesome.rst:143
msgid "Clojure"
msgstr "Clojure"

#: ../../source/awesome.rst:145
msgid ""
"`Sente <https://github.com/ptaoussanis/sente>`_ - Realtime web comms for "
"Clojure/Script."
msgstr "`Sente <https://github.com/ptaoussanis/sente>`_ - Clojure / Script的实时网络通信。"

#: ../../source/awesome.rst:147
msgid ""
"`Chord <https://github.com/jarohen/chord>`_ - Library designed to bridge "
"the gap between the triad of CLJ/CLJS, web-sockets and core.async."
msgstr "`Chord <https://github.com/jarohen/chord>`_ - 库旨在弥合CLJ / CLJS三元组，web-socket和core.async之间的差距。"

#: ../../source/awesome.rst:150
msgid ""
"`Luminusweb <http://www.luminusweb.net/docs/websockets.md>`_ - Luminus is"
" a Clojure micro-framework based on a set of lightweight libraries."
msgstr "`Luminusweb <http://www.luminusweb.net/docs/websockets.md>`_ - Luminus是一个基于一组轻量级库的Clojure微框架。"

#: ../../source/awesome.rst:155
msgid "Java"
msgstr "Java"

#: ../../source/awesome.rst:157
msgid ""
"`Project Tyrus <https://tyrus.java.net/>`_ - JSR 356: Java API for "
"WebSocket - Reference Implementation."
msgstr "`Project Tyrus <https://tyrus.java.net/>`_ - JSR 356：用于WebSocket的Java API  - 参考实现。"

#: ../../source/awesome.rst:159
msgid ""
"`Java-WebSocket <https://github.com/TooTallNate/Java-WebSocket>`_ - "
"Barebones WebSocket client and server implementation written in 100% "
"Java."
msgstr "`Java-WebSocket <https://github.com/TooTallNate/Java-WebSocket>`_ - Barebones WebSocket客户端和服务器实现用100％Java编写。"

#: ../../source/awesome.rst:162
msgid ""
"`Atmosphere <https://github.com/Atmosphere/atmosphere>`_ - Realtime "
"Client Server Framework for the JVM, supporting WebSockets with Cross-"
"Browser Fallbacks."
msgstr "`Atmosphere <https://github.com/Atmosphere/atmosphere>`_ - 用于JVM的实时客户端服务器框架，支持具有跨浏览器回退的WebSocket。"

#: ../../source/awesome.rst:165
msgid ""
"`Webbit <https://github.com/webbit/webbit>`_ - Java event based WebSocket"
" and HTTP server."
msgstr "`Webbit <https://github.com/webbit/webbit>`_ - 基于Java事件的WebSocket和HTTP服务器。"

#: ../../source/awesome.rst:169
msgid "Kotlin"
msgstr "Kotlin"

#: ../../source/awesome.rst:171
msgid ""
"`Scarlet <https://github.com/Tinder/Scarlet>`_ - Tinder’s Retrofit "
"inspired WebSocket client for Kotlin, Java, and Android"
msgstr "`Scarlet <https://github.com/Tinder/Scarlet>`_ - Tinder的Retrofit启发了Kotlin，Java和Android的WebSocket客户端"

#: ../../source/awesome.rst:175
msgid "Scala"
msgstr "Scala"

#: ../../source/awesome.rst:177
msgid ""
"`Play "
"<https://www.playframework.com/documentation/2.5.x/ScalaWebSockets>`_ - "
"The high velocity web framework for Java and Scala."
msgstr "`Play <https://www.playframework.com/documentation/2.5.x/ScalaWebSockets>`_ - Java和Scala的高速Web框架。"

#: ../../source/awesome.rst:179
msgid ""
"`Finagle-websocket <https://github.com/finagle/finagle-websocket>`_ - "
"Finagle Websocket clients and servers."
msgstr "`Finagle-websocket <https://github.com/finagle/finagle-websocket>`_ - Finagle Websocket客户端和服务器。"

#: ../../source/awesome.rst:183
msgid "Node.js"
msgstr "Node.js"

#: ../../source/awesome.rst:185
msgid ""
"`Socket.IO <http://socket.io/>`_ - Featuring the fastest and most "
"reliable real-time engine."
msgstr "`Socket.IO <http://socket.io/>`_ - 拥有最快，最可靠的实时引擎。"

#: ../../source/awesome.rst:187
msgid ""
"`Nodejs-websocket <https://github.com/sitegui/nodejs-websocket>`_ - "
"Node.js module for websocket server and client."
msgstr "`Nodejs-websocket <https://github.com/sitegui/nodejs-websocket>`_ - 用于websocket服务器和客户端的Node.js模块。"

#: ../../source/awesome.rst:189
msgid ""
"`WebSocket-Node <https://github.com/theturtle32/WebSocket-Node>`_ - "
"WebSocket Implementation for Node.JS (Draft -08 through the final RFC "
"6455)."
msgstr "`WebSocket-Node <https://github.com/theturtle32/WebSocket-Node>`_ - Node.JS的WebSocket实现（草案-08到最终的RFC 6455）。"

#: ../../source/awesome.rst:192
msgid ""
"`Sockjs-node <https://github.com/sockjs/sockjs-node>`_ - WebSocket "
"emulation - Node.js server."
msgstr "`Sockjs-node <https://github.com/sockjs/sockjs-node>`_ - WebSocket仿真 -  Node.js服务器。"

#: ../../source/awesome.rst:194
msgid ""
"`Ws <https://github.com/websockets/ws>`_ - ``ws``: The fastest cross "
"platform RFC-6455 WebSocket implementation for Node.js."
msgstr "`Ws <https://github.com/websockets/ws>`_ - ``ws``: Node.js最快的跨平台RFC-6455 WebSocket实现。"

#: ../../source/awesome.rst:196
msgid ""
"`deepstream.io <https://deepstream.io/>`_ - Open realtime server a fast, "
"secure and scalable realtime server for mobile, web & iot."
msgstr "`deepstream.io <https://deepstream.io/>`_ - 为实时移动，Web和iot提供快速，安全，可扩展的实时服务器。"

#: ../../source/awesome.rst:198
msgid ""
"`websocket-as-promised <https://github.com/vitalets/websocket-as-"
"promised>`_ - Promise-based W3C WebSocket wrapper: allows to use promises"
" when connecting, disconnecting and messaging with WebSocket server."
msgstr "`websocket-as-promised <https://github.com/vitalets/websocket-as-promised>`_ - 基于Promise的W3C WebSocket包装器：允许在与WebSocket服务器连接，断开连接和消息传递时使用promises。"

#: ../../source/awesome.rst:201
msgid ""
"`faye-websocket-node <https://github.com/faye/faye-websocket-node>`_ - "
"Standards-compliant WebSocket client and server."
msgstr "`faye-websocket-node <https://github.com/faye/faye-websocket-node>`_ - 符合标准的WebSocket客户端和服务器。"

#: ../../source/awesome.rst:203
msgid ""
"`ws-wrapper <https://github.com/bminer/ws-wrapper>`_ - Lightweight "
"WebSocket wrapper that provides a socket.io-like event-handler API along "
"with Promise-based requests."
msgstr "`ws-wrapper <https://github.com/bminer/ws-wrapper>`_ - 轻量级WebSocket包装器，提供类似socket.io的事件处理程序API以及基于Promise的请求。"

#: ../../source/awesome.rst:206
msgid ""
"`ws-server-wrapper <https://github.com/bminer/ws-server-wrapper>`_ - "
"Companion library for ws-wrapper for the server-side."
msgstr "`ws-server-wrapper <https://github.com/bminer/ws-server-wrapper>`_ - 用于服务器端的ws-wrapper的配套库。"

#: ../../source/awesome.rst:208
msgid ""
"`uws <https://github.com/uNetworking/uWebSockets.js>`_ - Tiny WebSockets "
"(access to the C++ library, µWebSockets, via Node.js)"
msgstr "`uws <https://github.com/uNetworking/uWebSockets.js>`_ - Tiny WebSockets（通过Node.js访问C ++库，μWebSockets）"

#: ../../source/awesome.rst:210
msgid ""
"`netflux <https://coast-team.github.io/netflux/>`_ - JavaScript client "
"and server side transport API based on WebRTC & WebSocket"
msgstr "`netflux <https://coast-team.github.io/netflux/>`_ - 基于WebRTC和WebSocket的JavaScript客户端和服务器端传输API"

#: ../../source/awesome.rst:212
msgid ""
"`Sockette <https://github.com/lukeed/sockette>`_ - WebSocket client that "
"will automatically reconnect if the connection is lost."
msgstr "`Sockette <https://github.com/lukeed/sockette>`_ - WebSocket客户端，如果连接丢失，将自动重新连接。"

#: ../../source/awesome.rst:216
msgid "Perl"
msgstr "Perl"

#: ../../source/awesome.rst:218
msgid ""
"`Net::WebSocket::Server <http://search.cpan.org/~topaz/Net-WebSocket-"
"Server-0.001003/lib/Net/WebSocket/Server.pm>`_ - Straightforward Perl "
"WebSocket server with minimal dependencies."
msgstr "`Net::WebSocket::Server <http://search.cpan.org/~topaz/Net-WebSocket-Server-0.001003/lib/Net/WebSocket/Server.pm>`_ - 简单易懂的Perl WebSocket服务器，具有最小的依赖性。"

#: ../../source/awesome.rst:222
msgid "PHP"
msgstr "PHP"

#: ../../source/awesome.rst:224
msgid ""
"`Ratchet <http://socketo.me/>`_ - Ratchet is a loosely coupled PHP "
"library providing developers with tools to create real time, bi-"
"directional applications between clients and servers over WebSockets."
msgstr "`Ratchet <http://socketo.me/>`_ - Ratchet是一个松散耦合的PHP库，为开发人员提供了通过WebSockets在客户端和服务器之间创建实时双向应用程序的工具。"

#: ../../source/awesome.rst:228
msgid ""
"`Php-websocket <https://github.com/nekudo/php-websocket>`_ - Simple PHP "
"WebSocket implementation for PHP 5.3."
msgstr "`Php-websocket <https://github.com/nekudo/php-websocket>`_ - PHP 5.3的简单PHP WebSocket实现。"

#: ../../source/awesome.rst:230
msgid "`Phpws <https://github.com/Devristo/phpws>`_ - PHP Web Socket server."
msgstr "`Phpws <https://github.com/Devristo/phpws>`_ - PHP Web Socket服务器。"

#: ../../source/awesome.rst:232
msgid ""
"`Sandstone <https://eole-io.github.io/sandstone/>`_ - Microframework to "
"build a real time Rest API."
msgstr "`Sandstone <https://eole-io.github.io/sandstone/>`_ - Microframework构建实时Rest API。"

#: ../../source/awesome.rst:236
msgid "Python"
msgstr "Python"

#: ../../source/awesome.rst:238
msgid ""
"`Websockets <https://websockets.readthedocs.io>`_ - Websockets is a "
"library for developing WebSocket servers and clients in Python."
msgstr "`Websockets <https://websockets.readthedocs.io>`_ - Websockets是一个用于在Python中开发WebSocket服务器和客户端的库。"

#: ../../source/awesome.rst:240
msgid ""
"`Ws4py <https://ws4py.readthedocs.io/en/latest>`_ - WebSocket package for"
" Python."
msgstr "`Ws4py <https://ws4py.readthedocs.io/en/latest>`_ - 适用于Python的WebSocket包。"

#: ../../source/awesome.rst:242
msgid ""
"`Autobahn.ws <http://autobahn.ws>`_ - Open-source real-time framework for"
" Web, Mobile & Internet of Things."
msgstr "`Autobahn.ws <http://autobahn.ws>`_ - 适用于Web，移动和物联网的开源实时框架。"

#: ../../source/awesome.rst:244
msgid ""
"`Tornado <http://www.tornadoweb.org/>`_ - Tornado is a Python web "
"framework and asynchronous networking library, originally developed at "
"FriendFeed."
msgstr "`Tornado <http://www.tornadoweb.org/>`_ - Tornado是一个Python Web框架和异步网络库，最初是在FriendFeed上开发的。"

#: ../../source/awesome.rst:247
msgid ""
"`Websockets <https://github.com/aaugustin/websockets>`_ - WebSocket "
"implementation in Python 3."
msgstr "`Websockets <https://github.com/aaugustin/websockets>`_ - Python 3中的WebSocket实现。"

#: ../../source/awesome.rst:251
msgid "Ruby"
msgstr "Ruby"

#: ../../source/awesome.rst:253
msgid ""
"`AnyCable <http://anycable.io/>`_ - Polyglot replacement for Ruby "
"WebSocket servers with Action Cable protocol."
msgstr "`AnyCable <http://anycable.io/>`_ - 使用Action Cable协议替换Ruby WebSocket服务器的Polyglot。"

#: ../../source/awesome.rst:255
msgid ""
"`Em-websocket <https://github.com/igrigorik/em-websocket>`_ - "
"EventMachine based WebSocket server."
msgstr "`Em-websocket <https://github.com/igrigorik/em-websocket>`_ - 基于EventMachine的WebSocket服务器。"

#: ../../source/awesome.rst:257
msgid ""
"`Faye-websocket-ruby <https://github.com/faye/faye-websocket-ruby>`_ - "
"Standards-compliant WebSocket client and server."
msgstr "`Faye-websocket-ruby <https://github.com/faye/faye-websocket-ruby>`_ - 符合标准的WebSocket客户端和服务器。"

#: ../../source/awesome.rst:259
msgid ""
"`Iodine <https://github.com/boazsegev/iodine>`_ - WebSocket/HTTP server "
"with integrated pub/sub and optional Redis support."
msgstr "`Iodine <https://github.com/boazsegev/iodine>`_ - WebSocket / HTTP服务器，集成了pub / sub和可选的Redis支持。"

#: ../../source/awesome.rst:261
msgid ""
"`Websocket-driver-ruby <https://github.com/faye/websocket-driver-ruby>`_ "
"- WebSocket protocol handler with pluggable I/O."
msgstr "`Websocket-driver-ruby <https://github.com/faye/websocket-driver-ruby>`_ - 具有可插入I / O的WebSocket协议处理程序。"

#: ../../source/awesome.rst:263
msgid ""
"`Websocket-ruby <https://github.com/imanel/websocket-ruby>`_ - Universal "
"Ruby library to handle WebSocket protocol."
msgstr "`Websocket-ruby <https://github.com/imanel/websocket-ruby>`_ - 通用Ruby库来处理WebSocket协议。"

#: ../../source/awesome.rst:265
msgid ""
"`Scorched <https://github.com/wardrop/Scorched>`_ - Light-weight web "
"framework for Ruby."
msgstr "`Scorched <https://github.com/wardrop/Scorched>`_ - Ruby的轻量级Web框架。"

#: ../../source/awesome.rst:267
msgid ""
"`Firehose <http://firehose.io/>`_ - Build realtime Ruby web applications."
" Created by the fine folks at Poll Everywhere."
msgstr "`Firehose <http://firehose.io/>`_ - 构建实时Ruby Web应用程序。由Poll Everywhere的优秀人员创建。"

#: ../../source/awesome.rst:269
msgid ""
"`Slanger <https://github.com/stevegraham/slanger>`_ - Open Pusher "
"implementation compatible with Pusher libraries."
msgstr "`Slanger <https://github.com/stevegraham/slanger>`_ - 与Pusher库兼容的Open Pusher实现。"

#: ../../source/awesome.rst:271
msgid ""
"`render_sync <https://github.com/chrismccord/render_sync>`_ - Real-time "
"Rails Partials."
msgstr "`render_sync <https://github.com/chrismccord/render_sync>`_ - 实时Rails部分。"

#: ../../source/awesome.rst:273
msgid ""
"`websocket-rails <https://github.com/websocket-rails/websocket-rails>`_ -"
" Plug and play websocket support for ruby on rails."
msgstr "`websocket-rails <https://github.com/websocket-rails/websocket-rails>`_ - 即插即用的websocket支持轨道上的红宝石。"

#: ../../source/awesome.rst:277
msgid "Protocols and APIs"
msgstr "协议和API"

#: ../../source/awesome.rst:279
msgid "`RFC6455 <https://tools.ietf.org/html/rfc6455>`_ - The WebSocket Protocol."
msgstr "`RFC6455 <https://tools.ietf.org/html/rfc6455>`_ - WebSocket协议。"

#: ../../source/awesome.rst:281
msgid ""
"`The WebSocket API <https://www.w3.org/TR/websockets/>`_ - The W3C The "
"WebSocket API."
msgstr "`The WebSocket API <https://www.w3.org/TR/websockets/>`_ - W3C WebSocket API。"

#: ../../source/awesome.rst:283
msgid ""
"`Hixie76 <https://tools.ietf.org/html/draft-hixie-"
"thewebsocketprotocol-76>`_ - The WebSocket protocol draft-hixie-"
"thewebsocketprotocol-76"
msgstr "`Hixie76 <https://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76>`_ - WebSocket协议draft-hixie-thewebsocketprotocol-76"

#: ../../source/awesome.rst:287
msgid "Command-Line Interface (CLI) Tools"
msgstr "命令行界面（CLI）工具"

#: ../../source/awesome.rst:289
msgid ""
"`claws <https://github.com/thehowl/claws>`_ - Awesome WebSocket Client - "
"an interactive command line client for testing websocket servers."
msgstr "`claws <https://github.com/thehowl/claws>`_ - 令人敬畏的WebSocket客户端 - 用于测试websocket服务器的交互式命令行客户端。"

#: ../../source/awesome.rst:292
msgid "`wscat <https://github.com/websockets/wscat>`_ - WebSocket cat."
msgstr "`wscat <https://github.com/websockets/wscat>`_ -WebSocket猫。"

#: ../../source/awesome.rst:293
msgid ""
"`wsta <https://github.com/esphen/wsta>`_ - A CLI development tool for "
"WebSocket APIs."
msgstr "`wsta <https://github.com/esphen/wsta>`_ - 用于WebSocket API的CLI开发工具。"

#: ../../source/awesome.rst:295
msgid "`ws <https://github.com/hashrocket/ws>`_ - websocket command line tool."
msgstr "`ws <https://github.com/hashrocket/ws>`_ - websocket命令行工具。"

#: ../../source/awesome.rst:297
msgid ""
"`wssh <https://github.com/progrium/wssh>`_ - wssh (“wish”) is a command-"
"line utility/shell for WebSocket inspired by netcat."
msgstr "`wssh <https://github.com/progrium/wssh>`_ -wssh（“wish”）是受netcat启发的WebSocket的命令行实用程序/ shell。"

#: ../../source/awesome.rst:299
msgid ""
"`wsc <https://github.com/raphael/wsc>`_ - A tiny command line websocket "
"client written in Go."
msgstr "`wsc <https://github.com/raphael/wsc>`_ - 一个用Go编写的小命令行websocket客户端。"

#: ../../source/awesome.rst:301
msgid ""
"`ws-cli <https://github.com/kseo/ws-cli>`_ - WebSocket Command Line "
"Client written in Go."
msgstr "`ws-cli <https://github.com/kseo/ws-cli>`_ - 用Go编写的WebSocket命令行客户端。"

#: ../../source/awesome.rst:303
msgid ""
"`ws-tool <https://github.com/plantain-00/ws-tool>`_ - A Develop Tool to "
"Test WebSocket, Socket.IO, Stomp, Bayeux, HTTP, TCP, UDP, WebRTC, DNS "
"API."
msgstr "`ws-tool <https://github.com/plantain-00/ws-tool>`_ - 用于测试WebSocket，Socket.IO，Stomp，Bayeux，HTTP，TCP，UDP，WebRTC，DNS API的开发工具。"

#: ../../source/awesome.rst:306
msgid ""
"`websocketd <https://github.com/joewalnes/websocketd>`_ - Turn any "
"program that uses STDIN/STDOUT into a WebSocket server. Like inetd, but "
"for WebSockets."
msgstr "`websocketd <https://github.com/joewalnes/websocketd>`_ - 将任何使用STDIN / STDOUT的程序转换为WebSocket服务器。像inetd一样，但对于WebSockets。"

#: ../../source/awesome.rst:311
msgid "Real Life Stories"
msgstr "真实的人生故事"

#: ../../source/awesome.rst:313
msgid ""
"`The top 10 realtime web apps <http://www.creativebloq.com/app-"
"design/top-10-realtime-web-apps-5133752>`_"
msgstr "`十大实时网络应用程序 <http://www.creativebloq.com/app-design/top-10-realtime-web-apps-5133752>`_"

#: ../../source/awesome.rst:315
msgid ""
"`Super sync sports <https://blog.chromium.org/2013/02/on-track-with-"
"chrome-super-sync-sports.html>`_"
msgstr "`超级同步运动 <https://blog.chromium.org/2013/02/on-track-with-chrome-super-sync-sports.html>`_"

#: ../../source/awesome.rst:317
msgid "`Firepad <https://firepad.io>`_"
msgstr "`Firepad <https://firepad.io>`_"

#: ../../source/awesome.rst:318
msgid "`JabbR <http://about.jabbr.net/>`_"
msgstr "`JabbR <http://about.jabbr.net/>`_"

#: ../../source/awesome.rst:319
msgid "`Kaazing <https://kaazing.com/>`_"
msgstr "`Kaazing <https://kaazing.com/>`_"

#: ../../source/awesome.rst:320
msgid ""
"`Taskade <https://taskade.com>`_ - Real-time collaborative task lists and"
" outlines."
msgstr "`Taskade <https://taskade.com>`_ - 实时协作任务列表和概述。"

#: ../../source/awesome.rst:324
msgid "Security"
msgstr "安全"

#: ../../source/awesome.rst:326
msgid ""
"`WebSockets - An Introduction "
"<https://gist.github.com/subudeepak/9897212>`_ - The problems and some "
"security implications of websockets - Cross-site WebSockets Scripting "
"(XSWS)."
msgstr "`WebSockets - 一个介绍 <https://gist.github.com/subudeepak/9897212>`_ - websockets的问题和一些安全隐患 - 跨站点WebSockets脚本（XSWS）。"

#: ../../source/awesome.rst:330
msgid ""
"`Hacking with WebSockets <https://media.blackhat.com/bh-"
"us-12/Briefings/Shekyan/BH_US_12_Shekyan_Toukharian_Hacking_Websocket_Slides.pdf>`_"
" - Talk on Blackhat USA 2012 Conference."
msgstr "`使用WebSockets进行黑客攻击 <https://media.blackhat.com/bh-us-12/Briefings/Shekyan/BH_US_12_Shekyan_Toukharian_Hacking_Websocket_Slides.pdf>`_ - 谈谈Blackhat USA 2012会议。"

#: ../../source/awesome.rst:333
msgid ""
"`Testing WebSockets <https://www.owasp.org/index.php/Testing_WebSockets_"
"(OTG-CLIENT-010)>`_ - This article is part of the new OWASP Testing Guide"
" v4."
msgstr "`测试WebSockets <https://www.owasp.org/index.php/Testing_WebSockets_(OTG-CLIENT-010)>`_ - 本文是新的OWASP测试指南v4的一部分。"

#: ../../source/awesome.rst:336
msgid ""
"`Websockets Auth <http://stratumsecurity.ghost.io/2016/06/13/websockets-"
"auth>`_ - Journey into WebSockets Authentication/Authorization."
msgstr "`Websockets 验证 <http://stratumsecurity.ghost.io/2016/06/13/websockets-auth>`_ - 进入WebSockets身份验证/授权之旅。"

#: ../../source/awesome.rst:339
msgid ""
"`WebSocket Security <https://devcenter.heroku.com/articles/websocket-"
"security>`_ - The WebSocket protocol is a young technology, and brings "
"with it some risks. Decades of experience have taught the web community "
"some best practices around HTTP security, but the security best practices"
" in the WebSocket world aren’t firmly established, and continue to "
"evolve. Nevertheless, some themes have emerged and they are described in "
"this article."
msgstr "`WebSocket安全 <https://devcenter.heroku.com/articles/websocket-security>`_ - WebSocket协议是一项年轻的技术，并带来一些风险。数十年的经验教会了Web社区围绕HTTP安全性的一些最佳实践，但WebSocket世界中的安全性最佳实践尚未确立，并且还在不断发展。尽管如此，已经出现了一些主题，本文对它们进行了描述。"

#: ../../source/awesome.rst:347
msgid ""
"`Cross-Site WebSocket Hijacking <http://www.christian-"
"schneider.net/CrossSiteWebSocketHijacking.html>`_ - Cross-Site WebSocket "
"Hijacking (CSWSH) - Web Application Security Blog."
msgstr "`跨站点WebSocket劫持 <http://www.christian-schneider.net/CrossSiteWebSocketHijacking.html>`_ - 跨站点WebSocket劫持(CSWSH) - Web应用程序安全博客。"

#: ../../source/awesome.rst:353
msgid "Theory"
msgstr "理论"

#: ../../source/awesome.rst:356
msgid "Articles & Papers"
msgstr "文章和论文"

#: ../../source/awesome.rst:358
msgid ""
"`An introduction to Websockets <http://blog.teamtreehouse.com/an-"
"introduction-to-websockets>`_ - Brief History of Real-Time Web "
"Applications."
msgstr "`Websockets简介 <http://blog.teamtreehouse.com/an-introduction-to-websockets>`_ - 实时Web应用程序的简史。"

#: ../../source/awesome.rst:361
msgid ""
"`Introducing WebSockets: Bringing Sockets to the Web "
"<https://www.html5rocks.com/en/tutorials/websockets/basics/>`_ - The "
"Problem: Low Latency Client-Server and Server-Client Connections."
msgstr "`WebSockets简介：将套接字引入Web <https://www.html5rocks.com/en/tutorials/websockets/basics/>`_ - 问题：低延迟客户端 - 服务器和服务器 - 客户端连接。"

#: ../../source/awesome.rst:364
msgid ""
"`About HTML5 WebSocket <https://websocket.org/aboutwebsocket.html>`_ - "
"About HTML5 WebSocket."
msgstr "`关于HTML5 WebSocket <https://websocket.org/aboutwebsocket.html>`_ - 关于HTML5 WebSocket。"

#: ../../source/awesome.rst:366
msgid ""
"`Node.js WebSocket <https://medium.com/@denizozger/finding-the-right-"
"node-js-websocket-implementation-b63bfca0539#.q2313as8p>`_ - Finding the "
"right Node.js WebSocket implementation."
msgstr "`Node.js WebSocket <https://medium.com/@denizozger/finding-the-right-node-js-websocket-implementation-b63bfca0539#.q2313as8p>`_ - 找到正确的Node.js WebSocket实现."

#: ../../source/awesome.rst:369
msgid ""
"`Websockets 101 <http://lucumr.pocoo.org/2012/9/24/websockets-101/>`_ - "
"Armin Ronacher’s Thoughts and Writings (creator of Flask)."
msgstr "`Websockets 101 <http://lucumr.pocoo.org/2012/9/24/websockets-101/>`_ - Armin Ronacher的思想和着作（Flask的创造者）。"

#: ../../source/awesome.rst:372
msgid ""
"`Real-time Apps <https://www.sitepoint.com/real-time-apps-websockets-"
"server-sent-events/>`_ - Building Real-time Apps with Websockets & "
"Server-Sent Events."
msgstr "`实时应用 <https://www.sitepoint.com/real-time-apps-websockets-server-sent-events/>`_ - 使用Websockets和服务器发送的事件构建实时应用程序。"

#: ../../source/awesome.rst:375
msgid ""
"`Real-Time Web by Paul Banks <https://banksco.de/p/state-of-realtime-"
"web-2016.html>`_ - The State of Real-Time Web in 2016."
msgstr "`保罗班克斯的实时网络 <https://banksco.de/p/state-of-realtime-web-2016.html>`_ - 2016年的实时网状态。"

#: ../../source/awesome.rst:378
msgid ""
"`Are WebSockets the future? <https://samsaffron.com/archive/2015/12/29"
"/websockets-caution-required>`_ - WebSockets, caution required!"
msgstr "`WebSockets是未来吗？ <https://samsaffron.com/archive/2015/12/29/websockets-caution-required>`_ - WebSockets，需要谨慎！"

#: ../../source/awesome.rst:381
msgid ""
"`MSDN Microsoft Blog <https://msdn.microsoft.com/en-us/hh563510.aspx>`_ -"
" The Dangers of HTML5: WebSockets and Stable Standards."
msgstr "`MSDN微软博客 <https://msdn.microsoft.com/en-us/hh563510.aspx>`_ - HTML5的危险：WebSockets和稳定标准。"

#: ../../source/awesome.rst:384
msgid ""
"`Webpush Internet-Draft <https://martinthomson.github.io/drafts/draft-"
"thomson-webpush-http2.html>`_ - Generic Event Delivery Using HTTP Push."
msgstr "`webpush互联网草案 <https://martinthomson.github.io/drafts/draft-thomson-webpush-http2.html>`_ - 使用HTTP推送进行通用事件传递。"

#: ../../source/awesome.rst:387
msgid ""
"`Full Stack Python <https://www.fullstackpython.com/websockets.html>`_ - "
"WebSockets on Python."
msgstr "`全栈Python <https://www.fullstackpython.com/websockets.html>`_ - Python上的WebSockets。"

#: ../../source/awesome.rst:390
msgid ""
"`Do you really need WebSockets? <https://blog.stanko.io/do-you-really-"
"need-websockets-343aed40aa9b>`_ - WebSockets explanation."
msgstr "`你真的需要WebSockets吗？ <https://blog.stanko.io/do-you-really-need-websockets-343aed40aa9b>`_ - WebSockets说明。"

#: ../../source/awesome.rst:395
msgid "Talks"
msgstr "会谈"

#: ../../source/awesome.rst:397
msgid ""
"`Initial Steps to Use Websocket-rails "
"<http://tgib23.github.io/blog/2014/08/03/first-post/>`_ - This is the "
"very initial steps to use websocket-rails."
msgstr "`使用Websocket-rails的初始步骤 <http://tgib23.github.io/blog/2014/08/03/first-post/>`_ - 这是使用websocket-rails的最初步骤。"

#: ../../source/awesome.rst:402
msgid "Tutorials"
msgstr "教程"

#: ../../source/awesome.rst:404
msgid ""
"`Honeybadger.IO <http://blog.honeybadger.io/building-a-simple-websockets-"
"server-from-scratch-in-ruby>`_ - Building a simple websockets server from"
" scratch in Ruby."
msgstr "`Honeybadger.IO <http://blog.honeybadger.io/building-a-simple-websockets-server-from-scratch-in-ruby>`_ - 在Ruby中从头开始构建一个简单的websockets服务器。"

#: ../../source/awesome.rst:406
msgid ""
"`Engineyard <https://blog.engineyard.com/2013/getting-started-with-ruby-"
"and-websockets>`_ - Getting Started with Ruby and WebSockets."
msgstr "`Engineyard <https://blog.engineyard.com/2013/getting-started-with-ruby-and-websockets>`_ - Ruby和WebSockets入门。"

#: ../../source/awesome.rst:408
msgid ""
"`David Walsh <https://davidwalsh.name/websocket>`_ - WebSocket and "
"Socket.IO."
msgstr "`大卫沃尔什 <https://davidwalsh.name/websocket>`_ - WebSocket和Socket.IO。"

#: ../../source/awesome.rst:412
msgid "Books"
msgstr "图书"

#: ../../source/awesome.rst:414
msgid ""
"`WebSocket <http://shop.oreilly.com/product/0636920030485.do>`_ - "
"Lightweight Client-Server Communications. Andrew Lombardi."
msgstr "`WebSocket <http://shop.oreilly.com/product/0636920030485.do>`_ - 轻量级客户端 - 服务器通信。安德鲁隆巴迪。"

#: ../../source/awesome.rst:416
msgid ""
"`The Definitive Guide to HTML5 WebSocket "
"<http://www.apress.com/gp/book/9781430247401>`_ - Build Real-Time "
"Applications with HTML5. By Vanessa Wang, Frank Salim, and Peter "
"Moskovits. Source Code `here <https://github.com/Apress/def-guide-to-"
"html5-websocket>`_."
msgstr "`HTML5 WebSocket权威指南 <http://www.apress.com/gp/book/9781430247401>`_ - 使用HTML5构建实时应用程序。由Vanessa Wang，Frank Salim和Peter Moskovits撰写。 源代码 `这里 <https://github.com/Apress/def-guide-to-html5-websocket>`_."

#: ../../source/awesome.rst:421
msgid ""
"`High Performance Browser Networking <https://hpbn.co/websocket/>`_ - "
"High Performance Browser Networking: WebSocket."
msgstr "`高性能浏览器网络 <https://hpbn.co/websocket/>`_ - 高性能浏览器网络：WebSocket。"

#: ../../source/awesome.rst:425
msgid "Sites"
msgstr "网站"

#: ../../source/awesome.rst:427
msgid ""
"`WebSocket ORG <https://websocket.org>`_ - The one-stop-shop for all your"
" websocket needs."
msgstr "`WebSocket ORG <https://websocket.org>`_ - 满足您所有websocket需求的一站式服务。"

#: ../../source/awesome.rst:429
msgid ""
"`WebSockets MDN <https://developer.mozilla.org/en-"
"US/docs/Web/API/WebSockets_API>`_ - WebSockets Mozilla Developer Network "
"(MDN)."
msgstr "`WebSockets MDN <https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API>`_ - WebSockets Mozilla开发者网络（MDN）。"

#: ../../source/awesome.rst:434
msgid "License"
msgstr "执照"

#: ../../source/awesome.rst:436
msgid "|CC0|"
msgstr "|CC0|"

#: ../../source/awesome.rst:439
msgid "Contributing"
msgstr "特约"

#: ../../source/awesome.rst:441
msgid ""
"Please, read the `Contribution Guidelines "
"<https://github.com/facundofarias/awesome-"
"websockets/blob/master/CONTRIBUTING.md>`_ before submitting your "
"suggestion."
msgstr "在提交您的建议之前，请阅读 `贡献指南 <https://github.com/facundofarias/awesome-websockets/blob/master/CONTRIBUTING.md>`_ 。"

#: ../../source/awesome.rst:445
msgid ""
"Feel free to `open an issue <https://github.com/facundofarias/awesome-"
"websockets/issues>`_ or `create a pull request "
"<https://github.com/facundofarias/awesome-websockets/pulls>`_ with your "
"additions."
msgstr "随意 `打开问题 <https://github.com/facundofarias/awesome-websockets/issues>`_ 或 `创建拉取请求 <https://github.com/facundofarias/awesome-websockets/pulls>`_ 添加你的。"

#: ../../source/awesome.rst:451
msgid "Thanks!"
msgstr "感谢!"

#: ../../source/awesome.rst:454
msgid "Acknowledgments"
msgstr "致谢"

#: ../../source/awesome.rst:456
msgid ""
"Table of contents generated with `DocToc "
"<https://github.com/thlorenz/doctoc>`_"
msgstr "用 `DocToc <https://github.com/thlorenz/doctoc>`_ 生成的目录"

#~ msgid ""
#~ "WebSocket is a computer communications "
#~ "protocol, providing full-duplex communication"
#~ " channels over a single TCP "
#~ "connection. The WebSocket protocol was "
#~ "standardized by the IETF as RFC "
#~ "6455 in 2011, and the WebSocket "
#~ "API in Web IDL is being "
#~ "standardized by the W3C."
#~ msgstr ""

#~ msgid "Contents"
#~ msgstr ""

#~ msgid "[C](#c)"
#~ msgstr ""

#~ msgid ""
#~ "Nchan - Nchan is a scalable, "
#~ "flexible pub/sub server for the modern"
#~ " web, built as a module for the"
#~ " Nginx web server."
#~ msgstr ""

#~ msgid "Apache-websocket - Apache WebSocket module."
#~ msgstr ""

#~ msgid ""
#~ "MinnowServer - A super small and "
#~ "fast embedded HTTP(S) WebSocket server."
#~ msgstr ""

#~ msgid ""
#~ "gwsocket - Fast, standalone, language-"
#~ "agnostic WebSocket server RFC6455 compliant."
#~ msgstr ""

#~ msgid ""
#~ "Libwebsockets - It's a lightweight pure"
#~ " C library built to use minimal "
#~ "CPU and memory resources, and provide"
#~ " fast throughput in both directions "
#~ "as client or server."
#~ msgstr ""

#~ msgid "Libwebsock - C library for easy WebSockets server."
#~ msgstr ""

#~ msgid "Websocket -  Websocket server written in C."
#~ msgstr ""

#~ msgid ""
#~ "facil.io - A server/framework library "
#~ "for web applications, including Websockets "
#~ "and native pub/sub."
#~ msgstr ""

#~ msgid ""
#~ "libuwsc - A Lightweight and fully "
#~ "asynchronous WebSocket client C library "
#~ "based on libubox for Embedded Linux."
#~ msgstr ""

#~ msgid ""
#~ "mongoose - Mongoose Embedded Web Server"
#~ " Library - Mongoose is more than "
#~ "an embedded webserver. It is a "
#~ "multi-protocol embedded networking library "
#~ "with functions including TCP, HTTP "
#~ "client and server, WebSocket client and"
#~ " server, MQTT client and broker and"
#~ " much more."
#~ msgstr ""

#~ msgid "Websocketpp - C++ Websocket client/server library."
#~ msgstr ""

#~ msgid ""
#~ "QtWebSockets - The QtWebSockets module "
#~ "is an add-on for the Qt5 "
#~ "library."
#~ msgstr ""

#~ msgid "Beast - HTTP and WebSocket built on Boost.Asio in C++11."
#~ msgstr ""

#~ msgid "µWebSockets -  Highly scalable WebSocket server & client library."
#~ msgstr ""

#~ msgid ""
#~ "Simple-WebSocket-Server -  A very "
#~ "simple, fast, multithreaded, platform "
#~ "independent WebSocket (WS) and WebSocket "
#~ "Secure (WSS) server and client library"
#~ " implemented using C++11, Boost.Asio and"
#~ " OpenSSL."
#~ msgstr ""

#~ msgid ""
#~ "UEWebsocket - Unreal engine 4 websocket"
#~ " plugin for both c++ and blueprint"
#~ " developer."
#~ msgstr ""

#~ msgid ""
#~ "IXWebSocket - Lightweight C++11 multi-"
#~ "threaded client library with TLS "
#~ "support."
#~ msgstr ""

#~ msgid "ASP.NET SignalR - Incredibly simple real-time web for .NET."
#~ msgstr ""

#~ msgid ""
#~ "WebSocketListener - Lightweight and highly "
#~ "scalable asynchronous WebSocket server for "
#~ ".NET/Mono."
#~ msgstr ""

#~ msgid ""
#~ "websocket-rpc - WebSocket RPC library"
#~ " for .NET with auto JavaScript client"
#~ " code generation, supporting ASP.NET Core."
#~ msgstr ""

#~ msgid ""
#~ "NetGain - A high performance websocket"
#~ " server library powering Stack Overflow."
#~ msgstr ""

#~ msgid "websocket-manager - Real-Time library for ASP .NET Core."
#~ msgstr ""

#~ msgid ""
#~ "WebSockets - Implementation of the "
#~ "WebSocket protocol, along with client "
#~ "and server integration components."
#~ msgstr ""

#~ msgid ""
#~ "WebSockets support in ASP.NET Core - "
#~ "This article explains how to get "
#~ "started with WebSockets in ASP.NET Core."
#~ msgstr ""

#~ msgid "Sockjs-erlang - WebSocket emulation - Erlang server."
#~ msgstr ""

#~ msgid "Cowboy - Small, fast, modular HTTP server written in Erlang."
#~ msgstr ""

#~ msgid "Kraken - Distributed Pubsub Server for Realtime Apps."
#~ msgstr ""

#~ msgid "Gorilla Websocket - WebSocket implementation for Go."
#~ msgstr ""

#~ msgid ""
#~ "Websocket - Package Websocket implements "
#~ "a client and server for the "
#~ "WebSocket protocol as specified in RFC"
#~ " 6455."
#~ msgstr ""

#~ msgid "Ws - Tiny WebSocket library for Go."
#~ msgstr ""

#~ msgid "1m-go-websockets - Handling 1M websockets connections in Go."
#~ msgstr ""

#~ msgid ""
#~ "gotify/server - A simple server for "
#~ "sending and receiving messages in "
#~ "real-time per web socket."
#~ msgstr ""

#~ msgid "nhooyr/websocket - A minimal and idiomatic WebSocket library for Go."
#~ msgstr ""

#~ msgid "Websockets - A Haskell library for creating WebSocket-capable servers."
#~ msgstr ""

#~ msgid "Sente - Realtime web comms for Clojure/Script."
#~ msgstr ""

#~ msgid ""
#~ "Chord - Library designed to bridge "
#~ "the gap between the triad of "
#~ "CLJ/CLJS, web-sockets and core.async."
#~ msgstr ""

#~ msgid ""
#~ "Luminusweb - Luminus is a Clojure "
#~ "micro-framework based on a set of "
#~ "lightweight libraries."
#~ msgstr ""

#~ msgid ""
#~ "Project Tyrus - JSR 356: Java API"
#~ " for WebSocket - Reference Implementation."
#~ msgstr ""

#~ msgid ""
#~ "Java-WebSocket - Barebones WebSocket "
#~ "client and server implementation written "
#~ "in 100% Java."
#~ msgstr ""

#~ msgid ""
#~ "Atmosphere - Realtime Client Server "
#~ "Framework for the JVM, supporting "
#~ "WebSockets with Cross-Browser Fallbacks."
#~ msgstr ""

#~ msgid "Webbit - Java event based WebSocket and HTTP server."
#~ msgstr ""

#~ msgid ""
#~ "Scarlet - Tinder's Retrofit inspired "
#~ "WebSocket client for Kotlin, Java, and"
#~ " Android"
#~ msgstr ""

#~ msgid "Play - The high velocity web framework for Java and Scala."
#~ msgstr ""

#~ msgid "Finagle-websocket - Finagle Websocket clients and servers."
#~ msgstr ""

#~ msgid "Socket.IO - Featuring the fastest and most reliable real-time engine."
#~ msgstr ""

#~ msgid "Nodejs-websocket - Node.js module for websocket server and client."
#~ msgstr ""

#~ msgid ""
#~ "WebSocket-Node - WebSocket Implementation "
#~ "for Node.JS (Draft -08 through the "
#~ "final RFC 6455)."
#~ msgstr ""

#~ msgid "Sockjs-node - WebSocket emulation - Node.js server."
#~ msgstr ""

#~ msgid ""
#~ "Ws - ws: The fastest cross "
#~ "platform RFC-6455 WebSocket implementation for"
#~ " Node.js."
#~ msgstr ""

#~ msgid ""
#~ "deepstream.io - Open realtime server a"
#~ " fast, secure and scalable realtime "
#~ "server for mobile, web & iot."
#~ msgstr ""

#~ msgid ""
#~ "websocket-as-promised - Promise-based"
#~ " W3C WebSocket wrapper: allows to use"
#~ " promises when connecting, disconnecting "
#~ "and messaging with WebSocket server."
#~ msgstr ""

#~ msgid "faye-websocket-node - Standards-compliant WebSocket client and server."
#~ msgstr ""

#~ msgid ""
#~ "ws-wrapper - Lightweight WebSocket "
#~ "wrapper that provides a socket.io-like"
#~ " event-handler API along with "
#~ "Promise-based requests."
#~ msgstr ""

#~ msgid ""
#~ "ws-server-wrapper - Companion library"
#~ " for ws-wrapper for the server-"
#~ "side."
#~ msgstr ""

#~ msgid ""
#~ "uws - Tiny WebSockets (access to "
#~ "the C++ library, µWebSockets, via "
#~ "Node.js)"
#~ msgstr ""

#~ msgid ""
#~ "netflux - JavaScript client and server"
#~ " side transport API based on WebRTC"
#~ " & WebSocket"
#~ msgstr ""

#~ msgid ""
#~ "Sockette - WebSocket client that will"
#~ " automatically reconnect if the connection"
#~ " is lost."
#~ msgstr ""

#~ msgid ""
#~ "Net::WebSocket::Server - Straightforward Perl "
#~ "WebSocket server with minimal dependencies."
#~ msgstr ""

#~ msgid ""
#~ "Ratchet - Ratchet is a loosely "
#~ "coupled PHP library providing developers "
#~ "with tools to create real time, "
#~ "bi-directional applications between clients "
#~ "and servers over WebSockets."
#~ msgstr ""

#~ msgid "Php-websocket - Simple PHP WebSocket implementation for PHP 5.3."
#~ msgstr ""

#~ msgid "Phpws - PHP Web Socket server."
#~ msgstr ""

#~ msgid "Sandstone - Microframework to build a real time Rest API."
#~ msgstr ""

#~ msgid ""
#~ "Websockets - Websockets is a library "
#~ "for developing WebSocket servers and "
#~ "clients in Python."
#~ msgstr ""

#~ msgid "Ws4py - WebSocket package for Python."
#~ msgstr ""

#~ msgid ""
#~ "Autobahn.ws - Open-source real-time "
#~ "framework for Web, Mobile & Internet "
#~ "of Things."
#~ msgstr ""

#~ msgid ""
#~ "Tornado - Tornado is a Python web"
#~ " framework and asynchronous networking "
#~ "library, originally developed at FriendFeed."
#~ msgstr ""

#~ msgid "Websockets - WebSocket implementation in Python 3."
#~ msgstr ""

#~ msgid ""
#~ "AnyCable - Polyglot replacement for Ruby"
#~ " WebSocket servers with Action Cable "
#~ "protocol."
#~ msgstr ""

#~ msgid "Em-websocket - EventMachine based WebSocket server."
#~ msgstr ""

#~ msgid "Faye-websocket-ruby - Standards-compliant WebSocket client and server."
#~ msgstr ""

#~ msgid ""
#~ "Iodine - WebSocket/HTTP server with "
#~ "integrated pub/sub and optional Redis "
#~ "support."
#~ msgstr ""

#~ msgid "Websocket-driver-ruby - WebSocket protocol handler with pluggable I/O."
#~ msgstr ""

#~ msgid "Websocket-ruby - Universal Ruby library to handle WebSocket protocol."
#~ msgstr ""

#~ msgid "Scorched - Light-weight web framework for Ruby."
#~ msgstr ""

#~ msgid ""
#~ "Firehose - Build realtime Ruby web "
#~ "applications. Created by the fine folks"
#~ " at Poll Everywhere."
#~ msgstr ""

#~ msgid "Slanger - Open Pusher implementation compatible with Pusher libraries."
#~ msgstr ""

#~ msgid "render_sync - Real-time Rails Partials."
#~ msgstr ""

#~ msgid "websocket-rails - Plug and play websocket support for ruby on rails."
#~ msgstr ""

#~ msgid "RFC6455 - The WebSocket Protocol."
#~ msgstr ""

#~ msgid "The WebSocket API - The W3C The WebSocket API."
#~ msgstr ""

#~ msgid "Hixie76 - The WebSocket protocol draft-hixie-thewebsocketprotocol-76"
#~ msgstr ""

#~ msgid ""
#~ "claws - Awesome WebSocket Client - "
#~ "an interactive command line client for"
#~ " testing websocket servers."
#~ msgstr ""

#~ msgid "wscat - WebSocket cat."
#~ msgstr ""

#~ msgid "wsta - A CLI development tool for WebSocket APIs."
#~ msgstr ""

#~ msgid "ws - websocket command line tool."
#~ msgstr ""

#~ msgid ""
#~ "wssh - wssh (\"wish\") is a "
#~ "command-line utility/shell for WebSocket "
#~ "inspired by netcat."
#~ msgstr ""

#~ msgid "wsc - A tiny command line websocket client written in Go."
#~ msgstr ""

#~ msgid "ws-cli - WebSocket Command Line Client written in Go."
#~ msgstr ""

#~ msgid ""
#~ "ws-tool - A Develop Tool to "
#~ "Test WebSocket, Socket.IO, Stomp, Bayeux, "
#~ "HTTP, TCP, UDP, WebRTC, DNS API."
#~ msgstr ""

#~ msgid ""
#~ "websocketd - Turn any program that "
#~ "uses STDIN/STDOUT into a WebSocket "
#~ "server. Like inetd, but for WebSockets."
#~ msgstr ""

#~ msgid "The top 10 realtime web apps"
#~ msgstr ""

#~ msgid "Super sync sports"
#~ msgstr ""

#~ msgid "Firepad"
#~ msgstr ""

#~ msgid "JabbR"
#~ msgstr ""

#~ msgid "Kaazing"
#~ msgstr ""

#~ msgid "Taskade - Real-time collaborative task lists and outlines."
#~ msgstr ""

#~ msgid ""
#~ "WebSockets - An Introduction - The "
#~ "problems and some security implications "
#~ "of websockets - Cross-site WebSockets"
#~ " Scripting (XSWS)."
#~ msgstr ""

#~ msgid "Hacking with WebSockets - Talk on Blackhat USA 2012 Conference."
#~ msgstr ""

#~ msgid ""
#~ "Testing WebSockets - This article is "
#~ "part of the new OWASP Testing "
#~ "Guide v4."
#~ msgstr ""

#~ msgid "Websockets Auth - Journey into WebSockets Authentication/Authorization."
#~ msgstr ""

#~ msgid ""
#~ "WebSocket Security - The WebSocket "
#~ "protocol is a young technology, and "
#~ "brings with it some risks. Decades "
#~ "of experience have taught the web "
#~ "community some best practices around "
#~ "HTTP security, but the security best "
#~ "practices in the WebSocket world aren’t"
#~ " firmly established, and continue to "
#~ "evolve. Nevertheless, some themes have "
#~ "emerged and they are described in "
#~ "this article."
#~ msgstr ""

#~ msgid ""
#~ "Cross-Site WebSocket Hijacking - "
#~ "Cross-Site WebSocket Hijacking (CSWSH) -"
#~ " Web Application Security Blog."
#~ msgstr ""

#~ msgid ""
#~ "An introduction to Websockets - Brief"
#~ " History of Real-Time Web "
#~ "Applications."
#~ msgstr ""

#~ msgid ""
#~ "Introducing WebSockets: Bringing Sockets to"
#~ " the Web - The Problem: Low "
#~ "Latency Client-Server and Server-Client"
#~ " Connections."
#~ msgstr ""

#~ msgid "About HTML5 WebSocket - About HTML5 WebSocket."
#~ msgstr ""

#~ msgid "Node.js WebSocket - Finding the right Node.js WebSocket implementation."
#~ msgstr ""

#~ msgid ""
#~ "Websockets 101 - Armin Ronacher's "
#~ "Thoughts and Writings (creator of "
#~ "Flask)."
#~ msgstr ""

#~ msgid ""
#~ "Real-time Apps - Building Real-"
#~ "time Apps with Websockets & Server-"
#~ "Sent Events."
#~ msgstr ""

#~ msgid "Real-Time Web by Paul Banks - The State of Real-Time Web in 2016."
#~ msgstr ""

#~ msgid "Are WebSockets the future? - WebSockets, caution required!"
#~ msgstr ""

#~ msgid ""
#~ "MSDN Microsoft Blog - The Dangers "
#~ "of HTML5: WebSockets and Stable "
#~ "Standards."
#~ msgstr ""

#~ msgid "Webpush Internet-Draft - Generic Event Delivery Using HTTP Push."
#~ msgstr ""

#~ msgid "Full Stack Python - WebSockets on Python."
#~ msgstr ""

#~ msgid "Do you really need WebSockets? - WebSockets explanation."
#~ msgstr ""

#~ msgid ""
#~ "Initial Steps to Use Websocket-rails "
#~ "- This is the very initial steps"
#~ " to use websocket-rails."
#~ msgstr ""

#~ msgid ""
#~ "Honeybadger.IO - Building a simple "
#~ "websockets server from scratch in Ruby."
#~ msgstr ""

#~ msgid "Engineyard - Getting Started with Ruby and WebSockets."
#~ msgstr ""

#~ msgid "David Walsh - WebSocket and Socket.IO."
#~ msgstr ""

#~ msgid "WebSocket - Lightweight Client-Server Communications. Andrew Lombardi."
#~ msgstr ""

#~ msgid ""
#~ "The Definitive Guide to HTML5 WebSocket"
#~ " - Build Real-Time Applications with"
#~ " HTML5. By Vanessa Wang, Frank Salim,"
#~ " and Peter Moskovits. Source Code "
#~ "here."
#~ msgstr ""

#~ msgid ""
#~ "High Performance Browser Networking - "
#~ "High Performance Browser Networking: "
#~ "WebSocket."
#~ msgstr ""

#~ msgid "WebSocket ORG - The one-stop-shop for all your websocket needs."
#~ msgstr ""

#~ msgid "WebSockets MDN - WebSockets Mozilla Developer Network (MDN)."
#~ msgstr ""

#~ msgid ""
#~ "Please, read the Contribution Guidelines "
#~ "before submitting your suggestion."
#~ msgstr ""

#~ msgid ""
#~ "Feel free to open an issue or "
#~ "create a pull request with your "
#~ "additions."
#~ msgstr ""

#~ msgid "Table of contents generated with DocToc"
#~ msgstr ""

