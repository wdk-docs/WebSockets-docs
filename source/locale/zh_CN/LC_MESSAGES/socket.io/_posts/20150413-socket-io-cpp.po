# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the WebSockets Docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: WebSockets Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-13 20:53+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:2
msgid "Socket.IO C++"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:5
msgid ""
"I’m really proud to announce the first release of the Socket.IO C++ "
"Client on GitHub!"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:8
msgid ""
"Based on Boost and WebSocket++, this full-featured Socket.IO 1.0 client "
"has the fundamental advantage of working on **multiple platforms**. Check"
" out the directory of examples. It contains examples of iOS, QT, and CLI "
"chat clients!"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:13
msgid ""
"To learn how to use this client, I put together a QT chat example that "
"communicates using a Socket.IO Node.JS chat server. Keep reading for "
"step-by-step instructions."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:26
msgid "Introduction"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:28
msgid ""
"If you’d like to follow along, begin by cloning the socket.io-client-cpp "
"repository using the following:"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:35
msgid "The app includes the following features:"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:37
msgid "Send messages to all users joining the room."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:38
msgid "Receive a notification when users join or leave the room."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:39
msgid "Receive notifications when a user starts typing a message."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:41
msgid "Before you get started, visit the QT community to download and install QT."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:45
msgid "Creating a QT GUI Application"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:47
msgid "Launch the QT Creator."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:49
msgid ""
"On the welcome page, select ``New Project``, then create a ``QT Widget "
"Application.`` Name it ``SioChatDemo.``"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:52
msgid "The project structure should look like this:"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:67
msgid "Importing an SioClient"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:69
msgid ""
"Lets copy the SioClient into the QT project under the subfolder "
"``sioclient.``"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:72
msgid ""
"Edit ``SioChatDemo.pro`` to configure paths and compile options by simply"
" adding:"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:86
msgid "Add two additional compile options:"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:93
msgid ""
"The ``no_keywords`` flag prevents ``qmake`` from treating some function "
"names as ``emit`` as the keyword for the signal-slot mechanism."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:96
msgid "Use ``c++11`` to ask for C++11 support."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:99
msgid "Importing Boost"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:101
msgid ""
"We now have our boost ``headers`` and a fat boost ``static lib`` named "
"``libboost.a``\\ (non-win32) or ``boost.lib``\\ (win32)."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:104
msgid ""
"To import them, we need to edit ``SioChatDemo.pro`` again by adding a "
"header including the following:"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:111
msgid "Linker options:"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:120
msgid "Create the Main Window UI"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:122
msgid ""
"Create a simple UI by dragging and dropping a widget from the widget box "
"on the left-hand side."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:133
msgid "It contains the following:"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:135
msgid "A ``QLineEdit`` at the top to input a nickname: ``nickNameEdit``"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:136
msgid "A ``QPushButton`` at the top right for login: ``loginBtn``"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:137
msgid "A ``QListWidget`` in the center for showing messages: ``listView``"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:138
msgid "A ``QLineEdit`` at the bottom for typing messages: ``messageEdit``"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:139
msgid "A ``QPushButton`` at the bottom right for sending messages: ``sendBtn``"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:143
msgid "Add Slots in the Main Window"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:145
msgid ""
"The following slots need to be added in the ``mainwindow`` class to "
"handle UI events:"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:148
msgid "Click ‘Login’ button"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:149
msgid "Click ‘Send Message’ button"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:150
msgid "Text change in message editing (to show typing status)"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:151
msgid "Return message editing (for sending responses)"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:153
msgid ""
"Insert the following code into the ``MainWindow`` class in "
"``mainwindow.h``:"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:165
msgid "Connect the UI Event Signal and Slots"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:167
msgid ""
"Open ``mainwindow.ui`` in the design mode. Switch to the "
"``signals/slots`` mode using ``Menu->Edit->Edit Signals/Slots``."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:170
msgid ""
"Click and hold the widget and drag it to the window (the cursor will "
"become an electrical ground symbol) to open the connection editor."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:173
msgid ""
"In the connection editor, edit the main window slots on the right side. "
"Add the slot function names added in ``mainwindow.h`` before."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:176
msgid ""
"Then we can connect the event signal to the widget with our own slots. "
"The result should look like this:"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:188
msgid "Adding UI Refresh Signals/Slots"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:190
msgid ""
"The ``sio::client`` callbacks are not in the UI thread. However, the UI "
"must be updated with those callbacks, so we need a signal for the non-UI "
"thread to request the ``slots`` functions in the UI thread. To signal "
"that ``QListWidgetItem`` has been added, insert the following:"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:211
msgid "Then connect them in the ``MainWindow`` constructor."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:218
msgid "Setting up the Socket"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:220
msgid ""
"For single-window applications, simply let ``MainWindow`` class hold the "
"``sio::client`` object by declaring a ``unique_ptr`` member of the "
"``sio::client`` and several event handling functions in ``mainwindow.h``."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:240
msgid ""
"Initialize ``sio::client`` and setup event bindings for the default "
"``socket`` in the ``MainWindow`` constructor."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:243
msgid "We also need to handle connectivity and disconnect events."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:245
msgid "Add the following to the ``MainWindow`` constructor:"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:276
msgid "Managing Connection State"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:278
msgid "We have several connection listeners for connection events."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:280
msgid ""
"First, we want to send a login message when were connected; we get the "
"default ``socket`` from the ``client`` to do that."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:292
msgid ""
"If the connection closes or fails, we need to restore the UI before we "
"connect."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:295
msgid ""
"\\````cpp void MainWindow::OnClosed(client::close_reason const& reason) {"
" //restore UI to pre-login state }"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:298
msgid "void MainWindow::OnFailed() { //restore UI to pre-login state }"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:316
msgid "Handling Socket.IO Events"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:318
msgid "We’ll need to handle socket.io events in our functions they are bound to."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:321
msgid "For example, we need to show received messages in the list view."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:342
msgid "Wrapping Up: Sending the Message"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:344
msgid ""
"When ``sendBtn`` is clicked, we need to send the text in ``messageEdit`` "
"to the chatroom."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:347
msgid "Add the following code to ``SendBtnClicked()``:"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:369
msgid "Further Reading"
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:371
msgid ""
"You can run the demo project to get a closer look. Before you run it, "
"please follow the instructions to make the Socket.io client library."
msgstr ""

#: ../../source/socket.io/_posts/20150413-socket-io-cpp.rst:374
msgid "Don’t forget to star the project on GitHub to get updates!"
msgstr ""

