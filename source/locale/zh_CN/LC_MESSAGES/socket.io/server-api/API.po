# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the WebSockets Docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: WebSockets Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-17 11:04+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/socket.io/server-api/API.rst:2
msgid "Server API"
msgstr "服务端 API"

#: ../../source/socket.io/server-api/API.rst:4
msgid "Exposed by ``require('socket.io')``."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:8
msgid "Works with and without ``new``:"
msgstr ""

#: ../../source/socket.io/server-api/API.rst
msgid "参数"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:10
msgid "he server to bind to."
msgstr ""

#: ../../source/socket.io/server-api/API.rst
msgid "Example"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:22
msgid "Available options:"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:55
msgid "Available options for the underlying Engine.IO server:"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:166
msgid "Among those options:"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:168
msgid ""
"The ``pingTimeout`` and ``pingInterval`` parameters will impact the delay"
" before a client knows the server is not available anymore. For example, "
"if the underlying TCP connection is not closed properly due to a network "
"issue, a client may have to wait up to ``pingTimeout + pingInterval`` ms "
"before getting a ``disconnect`` event."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:175
msgid ""
"The order of the ``transports`` array is important. By default, a long-"
"polling connection is established first, and then upgraded to WebSocket "
"if possible. Using ``['websocket']`` means there will be no fallback if a"
" WebSocket connection cannot be opened."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:197
msgid ""
"``port`` *(Number)* a port to listen to (a new ``http.Server`` will be "
"created)"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:199
#: ../../source/socket.io/server-api/API.rst:217
#: ../../source/socket.io/server-api/API.rst:359
#: ../../source/socket.io/server-api/API.rst:367
msgid "``options`` *(Object)*"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:201
#: ../../source/socket.io/server-api/API.rst:219
msgid ""
"See `above <#new-Server-httpServer-options>`_ for the list of available "
"``options``."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:248
msgid "*(Namespace)*"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:250
msgid "An alias for the default (``/``) namespace."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:261
msgid "``value`` *(Boolean)*"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:262
msgid "**Returns** ``Server|Boolean``"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:264
msgid ""
"If ``value`` is ``true`` the attached server (see ``Server#attach``) will"
" serve the client files. Defaults to ``true``. This method has no effect "
"after ``attach`` is called. If no arguments are supplied this method "
"returns the current value."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:282
msgid "``value`` *(String)*"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:283
#: ../../source/socket.io/server-api/API.rst:318
msgid "**Returns** ``Server|String``"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:285
msgid ""
"Sets the path ``value`` under which ``engine.io`` and the static files "
"will be served. Defaults to ``/socket.io``. If no arguments are supplied "
"this method returns the current value."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:301
msgid "``value`` *(Adapter)*"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:302
msgid "**Returns** ``Server|Adapter``"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:304
msgid ""
"Sets the adapter ``value``. Defaults to an instance of the ``Adapter`` "
"that ships with socket.io which is memory based. See `socket.io-adapter "
"<https://github.com/socketio/socket.io-adapter>`_ . If no arguments are "
"supplied this method returns the current value."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:317
msgid "``value`` *(String|String[])*"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:320
msgid ""
"Sets the allowed origins ``value``. Defaults to any origins being "
"allowed. If no arguments are supplied this method returns the current "
"value."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:330
msgid "``fn`` *(Function)*"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:331
#: ../../source/socket.io/server-api/API.rst:384
#: ../../source/socket.io/server-api/API.rst:392
msgid "**Returns** ``Server``"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:333
msgid ""
"Provides a function taking two arguments ``origin:String`` and "
"``callback(error, success)``, where ``success`` is a boolean value "
"indicating whether origin is allowed or not. If ``success`` is set to "
"``false``, ``error`` must be provided as a string value that will be "
"appended to the server response, e.g. “Origin not allowed”."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:339
msgid ""
"**Potential drawbacks**: \\* in some situations, when it is not possible "
"to determine ``origin`` it may have value of ``*`` \\* As this function "
"will be executed for every request, it is advised to make this function "
"work as fast as possible \\* If ``socket.io`` is used together with "
"``Express``, the CORS headers will be affected only for ``socket.io`` "
"requests. For Express you can use `cors "
"<https://github.com/expressjs/cors>`_ ."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:358
msgid "``httpServer`` *(http.Server)* the server to attach to"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:361
msgid ""
"Attaches the ``Server`` to an engine.io instance on ``httpServer`` with "
"the supplied ``options`` (optionally)."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:366
msgid "``port`` *(Number)* the port to listen on"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:369
msgid ""
"Attaches the ``Server`` to an engine.io instance on a new http.Server "
"with the supplied ``options`` (optionally)."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:375
msgid ""
"Synonym of `server.attach(httpServer[,options]) <#server-attach-"
"httpServer-options>`_ ."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:379
msgid ""
"Synonym of `server.attach(port[,options]) <#server-attach-port-options>`_"
" ."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:383
msgid "``engine`` *(engine.Server)*"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:386
msgid ""
"Advanced use only. Binds the server to a specific engine.io ``Server`` "
"(or compatible API) instance."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:391
msgid "``socket`` *(engine.Socket)*"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:394
msgid ""
"Advanced use only. Creates a new ``socket.io`` client from the incoming "
"engine.io (or compatible API) ``Socket``."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:399
msgid "``nsp`` *(String|RegExp|Function)*"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:400
msgid "**Returns** ``Namespace``"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:402
msgid ""
"Initializes and retrieves the given ``Namespace`` by its pathname "
"identifier ``nsp``. If the namespace was already initialized it returns "
"it immediately."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:410
msgid ""
"A regex or a function can also be provided, in order to create namespace "
"in a dynamic way:"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:431
msgid "With a function:"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:441
msgid "``callback`` *(Function)*"
msgstr ""

#: ../../source/socket.io/server-api/API.rst:443
msgid ""
"Closes the socket.io server. The ``callback`` argument is optional and "
"will be called when all connections are closed."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:461
msgid "Overwrites the default method to generate your custom socket id."
msgstr ""

#: ../../source/socket.io/server-api/API.rst:463
msgid ""
"The function is called with a node request object "
"(``http.IncomingMessage``) as first parameter."
msgstr ""

#~ msgid "Option"
#~ msgstr ""

#~ msgid "Default value"
#~ msgstr ""

#~ msgid "Description"
#~ msgstr ""

#~ msgid "``path``"
#~ msgstr ""

#~ msgid "``/socket.io``"
#~ msgstr ""

#~ msgid "name of the path to capture"
#~ msgstr ""

#~ msgid "``serveClie nt``"
#~ msgstr ""

#~ msgid "``true``"
#~ msgstr ""

#~ msgid "whether to serve the client files"
#~ msgstr ""

#~ msgid "``adapter``"
#~ msgstr ""

#~ msgid ""
#~ "the adapter to use. Defaults to an"
#~ " instance of the ``Adapter`` that "
#~ "ships with socket.io which is memory "
#~ "based. See `socket.io-adapter <htt "
#~ "ps://github.com/socketi o/socket.io-adapter>`_"
#~ msgstr ""

#~ msgid "``origins``"
#~ msgstr ""

#~ msgid "``*``"
#~ msgstr ""

#~ msgid "the allowed origins"
#~ msgstr ""

#~ msgid "``parser``"
#~ msgstr ""

#~ msgid ""
#~ "the parser to use. Defaults to an"
#~ " instance of the ``Parser`` that "
#~ "ships with socket.io. See `socket.io-"
#~ "parser <http s://github.com/socketio /socket.io-"
#~ "parser>`_."
#~ msgstr ""

#~ msgid "``pingTimeo ut``"
#~ msgstr ""

#~ msgid "``5000``"
#~ msgstr ""

#~ msgid "how many ms without a pong packet to consider the connection closed"
#~ msgstr ""

#~ msgid "``pingInter val``"
#~ msgstr ""

#~ msgid "``25000``"
#~ msgstr ""

#~ msgid "how many ms before sending a new ping packet"
#~ msgstr ""

#~ msgid "``upgradeTi meout``"
#~ msgstr ""

#~ msgid "``10000``"
#~ msgstr ""

#~ msgid "how many ms before an uncompleted transport upgrade is cancelled"
#~ msgstr ""

#~ msgid "``maxHttpBu fferSize``"
#~ msgstr ""

#~ msgid "``10e7``"
#~ msgstr ""

#~ msgid ""
#~ "how many bytes or characters a "
#~ "message can be, before closing the "
#~ "session (to avoid DoS)."
#~ msgstr ""

#~ msgid "``allowRequ est``"
#~ msgstr ""

#~ msgid ""
#~ "A function that receives a given "
#~ "handshake or upgrade request as its "
#~ "first parameter, and can decide whether"
#~ " to continue or not. The second "
#~ "argument is a function that needs "
#~ "to be called with the decided "
#~ "information: ``fn(err, success)``, where "
#~ "``success`` is a boolean value where "
#~ "false means that the request is "
#~ "rejected, and err is an error "
#~ "code."
#~ msgstr ""

#~ msgid "``transport s``"
#~ msgstr ""

#~ msgid "``['polling', 'websocket']``"
#~ msgstr ""

#~ msgid "transports to allow connections to"
#~ msgstr ""

#~ msgid "``allowUpgr ades``"
#~ msgstr ""

#~ msgid "whether to allow transport upgrades"
#~ msgstr ""

#~ msgid "``perMessag eDeflate``"
#~ msgstr ""

#~ msgid ""
#~ "parameters of the WebSocket permessage-"
#~ "deflate extension (see `ws module "
#~ "<https://github. com/einaros/ws>`_ api docs). "
#~ "Set to ``false`` to disable."
#~ msgstr ""

#~ msgid "``httpCompr ession``"
#~ msgstr ""

#~ msgid ""
#~ "parameters of the http compression for"
#~ " the polling transports (see `zlib "
#~ "<http://nodejs.or g/api/zlib.html#zlib_op tions>`_ "
#~ "api docs). Set to ``false`` to "
#~ "disable."
#~ msgstr ""

#~ msgid "``cookie``"
#~ msgstr ""

#~ msgid "``io``"
#~ msgstr ""

#~ msgid ""
#~ "name of the HTTP cookie that "
#~ "contains the client sid to send as"
#~ " part of handshake response headers. "
#~ "Set to ``false`` to not send one."
#~ msgstr ""

#~ msgid "``cookiePat h``"
#~ msgstr ""

#~ msgid "``/``"
#~ msgstr ""

#~ msgid ""
#~ "path of the above ``cookie`` option. "
#~ "If false, no path will be sent,"
#~ " which means browsers will only send"
#~ " the cookie on the engine.io attached"
#~ " path (``/engine.io``). Set false to "
#~ "not save io cookie on all "
#~ "requests."
#~ msgstr ""

#~ msgid "``cookieHtt pOnly``"
#~ msgstr ""

#~ msgid ""
#~ "if ``true`` HttpOnly io cookie cannot"
#~ " be accessed by client-side APIs, "
#~ "such as JavaScript. *This option has "
#~ "no effect if ``cookie`` or "
#~ "``cookiePath`` is set to ``false``.*"
#~ msgstr ""

#~ msgid "``wsEngine` `"
#~ msgstr ""

#~ msgid "``ws``"
#~ msgstr ""

#~ msgid ""
#~ "what WebSocket server implementation to "
#~ "use. Specified module must conform to"
#~ " the ``ws`` interface (see `ws module"
#~ " api docs <https://github.co "
#~ "m/websockets/ws/blob/ma ster/doc/ws.md>`_). Default "
#~ "value is ``ws``. An alternative c++ "
#~ "addon is also available by installing"
#~ " ``uws`` module."
#~ msgstr ""

#~ msgid "new Server(httpServer[, options])"
#~ msgstr ""

#~ msgid "``httpServer`` *(http.Server)* the server to bind to."
#~ msgstr ""

#~ msgid "new Server(port[, options])"
#~ msgstr ""

#~ msgid "new Server(options)"
#~ msgstr ""

#~ msgid "server.sockets"
#~ msgstr ""

#~ msgid "server.serveClient([value])"
#~ msgstr ""

#~ msgid "server.path([value])"
#~ msgstr ""

#~ msgid "server.adapter([value])"
#~ msgstr ""

#~ msgid ""
#~ "Sets the adapter ``value``. Defaults to"
#~ " an instance of the ``Adapter`` that"
#~ " ships with socket.io which is memory"
#~ " based. See `socket.io-adapter "
#~ "<https://github.com/socketio/socket.io-adapter>`_. If "
#~ "no arguments are supplied this method"
#~ " returns the current value."
#~ msgstr ""

#~ msgid "server.origins([value])"
#~ msgstr ""

#~ msgid "server.origins(fn)"
#~ msgstr ""

#~ msgid ""
#~ "**Potential drawbacks**: \\* in some "
#~ "situations, when it is not possible "
#~ "to determine ``origin`` it may have "
#~ "value of ``*`` \\* As this "
#~ "function will be executed for every "
#~ "request, it is advised to make "
#~ "this function work as fast as "
#~ "possible \\* If ``socket.io`` is used"
#~ " together with ``Express``, the CORS "
#~ "headers will be affected only for "
#~ "``socket.io`` requests. For Express you "
#~ "can use `cors <https://github.com/expressjs/cors>`_."
#~ msgstr ""

#~ msgid "server.attach(httpServer[, options])"
#~ msgstr ""

#~ msgid "server.attach(port[, options])"
#~ msgstr ""

#~ msgid "server.listen(httpServer[, options])"
#~ msgstr ""

#~ msgid ""
#~ "Synonym of `server.attach(httpServer[, options]) "
#~ "<#server-attach-httpServer-options>`_."
#~ msgstr ""

#~ msgid "server.listen(port[, options])"
#~ msgstr ""

#~ msgid ""
#~ "Synonym of `server.attach(port[, options]) "
#~ "<#server-attach-port-options>`_."
#~ msgstr ""

#~ msgid "server.bind(engine)"
#~ msgstr ""

#~ msgid "server.onconnection(socket)"
#~ msgstr ""

#~ msgid "server.of(nsp)"
#~ msgstr ""

#~ msgid "server.close([callback])"
#~ msgstr ""

#~ msgid "server.engine.generateId"
#~ msgstr ""

