# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the WebSockets Docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: WebSockets Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-13 22:19+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/socket.io/client-api/IO.rst:2
msgid "IO"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:4
msgid ""
"Exposed as the ``io`` namespace in the standalone build, or the result of"
" calling ``require('socket.io-client')``."
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:23
msgid "const io = require('socket.io-client');"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:27
msgid "The protocol revision number."
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:29
msgid "*(Number)*"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst
msgid "参数"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:34
msgid "defaults to ``window.location``"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:35
msgid "-  ``forceNew`` *(Boolean)* whether to reuse an existing connection"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:37
msgid "``forceNew`` *(Boolean)* whether to reuse an existing connection"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst
msgid "Returns"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:39
msgid "``Socket``"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:41
msgid ""
"Creates a new ``Manager`` for the given URL, and attempts to reuse an "
"existing ``Manager`` for subsequent calls, unless the ``multiplex`` "
"option is passed with ``false``. Passing this option is the equivalent of"
" passing ``'force new connection': true`` or ``forceNew: true``."
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:46
msgid ""
"A new ``Socket`` instance is returned for the namespace specified by the "
"pathname in the URL, defaulting to ``/``. For example, if the ``url`` is "
"``http://localhost/users``, a transport connection will be established to"
" ``http://localhost`` and a Socket.IO connection will be established to "
"``/users``."
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:52
msgid ""
"Query parameters can also be provided, either with the ``query`` option "
"or directly in the url (example: ``http://localhost/users?token=abc``)."
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:55
msgid ""
"See `new Manager(url[, options]) <#new-Manager-url-options>`_ for the the"
" list of available ``options``."
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:59
msgid "Initialization examples"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:62
msgid "With multiplexing"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:64
msgid ""
"By default, a single connection is used when connecting to different "
"namespaces (to minimize resources):"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:73
msgid "That behaviour can be disabled with the ``forceNew`` option:"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:81
msgid "Note: reusing the same namespace will also create two connections"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:90
msgid "With custom ``path``"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:103
msgid ""
"The request URLs will look like: "
"``localhost/myownpath/?EIO=3&transport=polling&sid=<id>``"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:112
msgid ""
"Here, the socket connects to the ``admin`` namespace, with the custom "
"path ``mypath``."
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:115
msgid ""
"The request URLs will look like: "
"``localhost/mypath/?EIO=3&transport=polling&sid=<id>`` (the namespace is "
"sent as part of the payload)."
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:120
msgid "With query parameters"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:145
msgid "With query option"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:155
msgid "The query content can also be updated on reconnection:"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:166
msgid "With ``extraHeaders``"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:168
msgid ""
"This only works if ``polling`` transport is enabled (which is the "
"default). Custom headers will not be appended when using ``websocket`` as"
" the transport. This happens because the WebSocket handshake does not "
"honor custom headers. (For background see the `WebSocket protocol RFC "
"<https://tools.ietf.org/html/rfc6455#section-4>`_)"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:199
msgid "With ``websocket`` transport only"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:201
msgid ""
"By default, a long-polling connection is established first, then upgraded"
" to “better” transports (like WebSocket). If you like to live "
"dangerously, this part can be skipped:"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:218
msgid "With a custom parser"
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:220
msgid ""
"The default `parser <https://github.com/socketio/socket.io-parser>`_ "
"promotes compatibility (support for ``Blob``, ``File``, binary check) at "
"the expense of performance. A custom parser can be provided to match the "
"needs of your application. Please see the example `here "
"<https://github.com/socketio/socket.io/tree/master/examples/custom-"
"parsers>`_."
msgstr ""

#: ../../source/socket.io/client-api/IO.rst:239
msgid "With a self-signed certificate"
msgstr ""

#~ msgid "``path``"
#~ msgstr ""

#~ msgid "``/socket.io``"
#~ msgstr ""

#~ msgid "name of the path that is captured on the server side"
#~ msgstr ""

#~ msgid "``reconnect ion``"
#~ msgstr ""

#~ msgid "whether to reconnect automatically"
#~ msgstr ""

#~ msgid "``reconnect ionAttempts ``"
#~ msgstr ""

#~ msgid "``Infinity``"
#~ msgstr ""

#~ msgid "number of reconnection attempts before giving up"
#~ msgstr ""

#~ msgid "``reconnect ionDelay``"
#~ msgstr ""

#~ msgid "``1000``"
#~ msgstr ""

#~ msgid ""
#~ "how long to initially wait before "
#~ "attempting a new reconnection (``1000``). "
#~ "Affected by +/- ``randomizationFactor`` , "
#~ "for example the default initial delay"
#~ " will be between 500 to 1500ms."
#~ msgstr ""

#~ msgid "``reconnect ionDelayMax ``"
#~ msgstr ""

#~ msgid "``5000``"
#~ msgstr ""

#~ msgid ""
#~ "maximum amount of time to wait "
#~ "between reconnections (``5000``). Each attempt"
#~ " increases the reconnection delay by "
#~ "2x along with a randomization as "
#~ "above"
#~ msgstr ""

#~ msgid "``randomiza tionFactor` `"
#~ msgstr ""

#~ msgid "``0.5``"
#~ msgstr ""

#~ msgid "0 <= randomizationFactor <= 1"
#~ msgstr ""

#~ msgid "``timeout``"
#~ msgstr ""

#~ msgid "``20000``"
#~ msgstr ""

#~ msgid ""
#~ "connection timeout before a ``connect_error``"
#~ " and ``connect_timeout`` events are emitted"
#~ msgstr ""

#~ msgid "``autoConne ct``"
#~ msgstr ""

#~ msgid ""
#~ "by setting this false, you have to"
#~ " call ``manager.open`` whenever you decide"
#~ " it’s appropriate"
#~ msgstr ""

#~ msgid "``query``"
#~ msgstr ""

#~ msgid ""
#~ "additional query parameters that are "
#~ "sent when connecting a namespace (then"
#~ " found in ``socket.handshake.quer y`` "
#~ "object on the server-side)"
#~ msgstr ""

#~ msgid "``parser``"
#~ msgstr ""

#~ msgid ""
#~ "the parser to use. Defaults to an"
#~ " instance of the ``Parser`` that "
#~ "ships with socket.io. See `socket.io-"
#~ "parser <http s://github.com/socketio /socket.io-"
#~ "parser>`_."
#~ msgstr ""

#~ msgid "``agent``"
#~ msgstr ""

#~ msgid "the ``http.Agent`` to use"
#~ msgstr ""

#~ msgid "``pfx``"
#~ msgstr ""

#~ msgid "Certificate, Private key and CA certificates to use for SSL."
#~ msgstr ""

#~ msgid "``key``"
#~ msgstr ""

#~ msgid "Private key to use for SSL."
#~ msgstr ""

#~ msgid "``passphras e``"
#~ msgstr ""

#~ msgid "A string of passphrase for the private key or pfx."
#~ msgstr ""

#~ msgid "``cert``"
#~ msgstr ""

#~ msgid "Public x509 certificate to use."
#~ msgstr ""

#~ msgid "``ca``"
#~ msgstr ""

#~ msgid ""
#~ "An authority certificate or array of "
#~ "authority certificates to check the "
#~ "remote host against."
#~ msgstr ""

#~ msgid "``ciphers``"
#~ msgstr ""

#~ msgid ""
#~ "A string describing the ciphers to "
#~ "use or exclude. Consult the `cipher "
#~ "format list <http://www.openss "
#~ "l.org/docs/apps/ciphers .html#CIPHER_LIST_FORMA T>`_ "
#~ "for details on the format."
#~ msgstr ""

#~ msgid "``rejectUna uthorized``"
#~ msgstr ""

#~ msgid ""
#~ "If true, the server certificate is "
#~ "verified against the list of supplied"
#~ " CAs. An ‘error’ event is emitted "
#~ "if verification fails. Verification happens"
#~ " at the connection level, before the"
#~ " HTTP request is sent."
#~ msgstr ""

#~ msgid "``perMessag eDeflate``"
#~ msgstr ""

#~ msgid ""
#~ "parameters of the WebSocket permessage-"
#~ "deflate extension (see `ws module "
#~ "<https://github. com/einaros/ws>`_ api docs). "
#~ "Set to ``false`` to disable."
#~ msgstr ""

#~ msgid "``extraHead ers``"
#~ msgstr ""

#~ msgid ""
#~ "Headers that will be passed for "
#~ "each request to the server (via "
#~ "xhr-polling and via websockets). These "
#~ "values then can be used during "
#~ "handshake or for special proxies."
#~ msgstr ""

#~ msgid "``forceNode ``"
#~ msgstr ""

#~ msgid ""
#~ "Uses NodeJS implementation for websockets "
#~ "- even if there is a native "
#~ "Browser-Websocket available, which is "
#~ "preferred by default over the NodeJS "
#~ "implementation. (This is useful when "
#~ "using hybrid platforms like nw.js or "
#~ "electron)"
#~ msgstr ""

#~ msgid "``localAddr ess``"
#~ msgstr ""

#~ msgid "the local IP address to connect to"
#~ msgstr ""

#~ msgid "io.protocol"
#~ msgstr ""

#~ msgid "io([url][, options])"
#~ msgstr ""

#~ msgid "``url`` *(String)* (defaults to ``window.location``)"
#~ msgstr ""

#~ msgid "``options`` *(Object)*"
#~ msgstr ""

#~ msgid "**Returns** ``Socket``"
#~ msgstr ""

#~ msgid "Manager"
#~ msgstr ""

#~ msgid "new Manager(url[, options])"
#~ msgstr ""

#~ msgid "``url`` *(String)*"
#~ msgstr ""

#~ msgid "**Returns** ``Manager``"
#~ msgstr ""

#~ msgid "Available options:"
#~ msgstr ""

#~ msgid "Available options for the underlying Engine.IO client:"
#~ msgstr ""

#~ msgid "Option"
#~ msgstr ""

#~ msgid "Default value"
#~ msgstr ""

#~ msgid "Description"
#~ msgstr ""

#~ msgid "``upgrade``"
#~ msgstr ""

#~ msgid "``true``"
#~ msgstr ""

#~ msgid ""
#~ "whether the client should try to "
#~ "upgrade the transport from long-polling"
#~ " to something better."
#~ msgstr ""

#~ msgid "``forceJSON P``"
#~ msgstr ""

#~ msgid "``false``"
#~ msgstr ""

#~ msgid "forces JSONP for polling transport."
#~ msgstr ""

#~ msgid "``jsonp``"
#~ msgstr ""

#~ msgid ""
#~ "determines whether to use JSONP when "
#~ "necessary for polling. If disabled (by"
#~ " settings to false) an error will "
#~ "be emitted (saying “No transports "
#~ "available”) if no other transports are"
#~ " available. If another transport is "
#~ "available for opening a connection (e.g."
#~ " WebSocket) that transport will be "
#~ "used instead."
#~ msgstr ""

#~ msgid "``forceBase 64``"
#~ msgstr ""

#~ msgid ""
#~ "forces base 64 encoding for polling "
#~ "transport even when XHR2 responseType is"
#~ " available and WebSocket even if the"
#~ " used standard supports binary."
#~ msgstr ""

#~ msgid "``enablesXD R``"
#~ msgstr ""

#~ msgid ""
#~ "enables XDomainRequest for IE8 to avoid"
#~ " loading bar flashing with click "
#~ "sound. default to ``false`` because "
#~ "XDomainRequest has a flaw of not "
#~ "sending cookie."
#~ msgstr ""

#~ msgid "``timestamp Requests``"
#~ msgstr ""

#~ msgid ""
#~ "whether to add the timestamp with "
#~ "each transport request. Note: polling "
#~ "requests are always stamped unless this"
#~ " option is explicitly set to "
#~ "``false``"
#~ msgstr ""

#~ msgid "``timestamp Param``"
#~ msgstr ""

#~ msgid "``t``"
#~ msgstr ""

#~ msgid "the timestamp parameter"
#~ msgstr ""

#~ msgid "``policyPor t``"
#~ msgstr ""

#~ msgid "``843``"
#~ msgstr ""

#~ msgid "port the policy server listens on"
#~ msgstr ""

#~ msgid "``transport s``"
#~ msgstr ""

#~ msgid "``['polling', 'websocket']``"
#~ msgstr ""

#~ msgid ""
#~ "a list of transports to try (in"
#~ " order). ``Engine`` always attempts to "
#~ "connect directly with the first one, "
#~ "provided the feature detection test for"
#~ " it passes."
#~ msgstr ""

#~ msgid "``transport Options``"
#~ msgstr ""

#~ msgid "``{}``"
#~ msgstr ""

#~ msgid ""
#~ "hash of options, indexed by transport"
#~ " name, overriding the common options "
#~ "for the given transport"
#~ msgstr ""

#~ msgid "``rememberU pgrade``"
#~ msgstr ""

#~ msgid ""
#~ "If true and if the previous "
#~ "websocket connection to the server "
#~ "succeeded, the connection attempt will "
#~ "bypass the normal upgrade process and"
#~ " will initially try websocket. A "
#~ "connection attempt following a transport "
#~ "error will use the normal upgrade "
#~ "process. It is recommended you turn "
#~ "this on only when using SSL/TLS "
#~ "connections, or if you know that "
#~ "your network does not block websockets."
#~ msgstr ""

#~ msgid "``onlyBinar yUpgrades``"
#~ msgstr ""

#~ msgid ""
#~ "whether transport upgrades should be "
#~ "restricted to transports supporting binary "
#~ "data"
#~ msgstr ""

#~ msgid "``requestTi meout``"
#~ msgstr ""

#~ msgid "``0``"
#~ msgstr ""

#~ msgid ""
#~ "timeout for xhr-polling requests in "
#~ "milliseconds (``0``) (*only for polling "
#~ "transport*)"
#~ msgstr ""

#~ msgid "``protocols ``"
#~ msgstr ""

#~ msgid ""
#~ "a list of subprotocols (see `MDN "
#~ "reference <https://deve loper.mozilla.org/en-US "
#~ "/docs/Web/API/WebSocket s_API/Writing_WebSocket "
#~ "_servers#Subprotocols>` __) (*only for "
#~ "websocket transport*)"
#~ msgstr ""

#~ msgid "Node.js-only options for the underlying Engine.IO client:"
#~ msgstr ""

#~ msgid "manager.reconnection([value])"
#~ msgstr ""

#~ msgid "``value`` *(Boolean)*"
#~ msgstr ""

#~ msgid "**Returns** ``Manager|Boolean``"
#~ msgstr ""

#~ msgid ""
#~ "Sets the ``reconnection`` option, or "
#~ "returns it if no parameters are "
#~ "passed."
#~ msgstr ""

#~ msgid "manager.reconnectionAttempts([value])"
#~ msgstr ""

#~ msgid "``value`` *(Number)*"
#~ msgstr ""

#~ msgid "**Returns** ``Manager|Number``"
#~ msgstr ""

#~ msgid ""
#~ "Sets the ``reconnectionAttempts`` option, or"
#~ " returns it if no parameters are "
#~ "passed."
#~ msgstr ""

#~ msgid "manager.reconnectionDelay([value])"
#~ msgstr ""

#~ msgid ""
#~ "Sets the ``reconnectionDelay`` option, or "
#~ "returns it if no parameters are "
#~ "passed."
#~ msgstr ""

#~ msgid "manager.reconnectionDelayMax([value])"
#~ msgstr ""

#~ msgid ""
#~ "Sets the ``reconnectionDelayMax`` option, or"
#~ " returns it if no parameters are "
#~ "passed."
#~ msgstr ""

#~ msgid "manager.timeout([value])"
#~ msgstr ""

#~ msgid "Sets the ``timeout`` option, or returns it if no parameters are passed."
#~ msgstr ""

#~ msgid "manager.open([callback])"
#~ msgstr ""

#~ msgid "``callback`` *(Function)*"
#~ msgstr ""

#~ msgid ""
#~ "If the manager was initiated with "
#~ "``autoConnect`` to ``false``, launch a "
#~ "new connection attempt."
#~ msgstr ""

#~ msgid ""
#~ "The ``callback`` argument is optional "
#~ "and will be called once the "
#~ "attempt fails/succeeds."
#~ msgstr ""

#~ msgid "manager.connect([callback])"
#~ msgstr ""

#~ msgid "Synonym of `manager.open([callback]) <#manageropencallback>`_."
#~ msgstr ""

#~ msgid "manager.socket(nsp, options)"
#~ msgstr ""

#~ msgid "``nsp`` *(String)*"
#~ msgstr ""

#~ msgid "Creates a new ``Socket`` for the given namespace."
#~ msgstr ""

#~ msgid "Event: ‘connect_error’"
#~ msgstr ""

#~ msgid "``error`` *(Object)* error object"
#~ msgstr ""

#~ msgid "Fired upon a connection error."
#~ msgstr ""

#~ msgid "Event: ‘connect_timeout’"
#~ msgstr ""

#~ msgid "Fired upon a connection timeout."
#~ msgstr ""

#~ msgid "Event: ‘reconnect’"
#~ msgstr ""

#~ msgid "``attempt`` *(Number)* reconnection attempt number"
#~ msgstr ""

#~ msgid "Fired upon a successful reconnection."
#~ msgstr ""

#~ msgid "Event: ‘reconnect_attempt’"
#~ msgstr ""

#~ msgid "Fired upon an attempt to reconnect."
#~ msgstr ""

#~ msgid "Event: ‘reconnecting’"
#~ msgstr ""

#~ msgid "Event: ‘reconnect_error’"
#~ msgstr ""

#~ msgid "Fired upon a reconnection attempt error."
#~ msgstr ""

#~ msgid "Event: ‘reconnect_failed’"
#~ msgstr ""

#~ msgid "Fired when couldn’t reconnect within ``reconnectionAttempts``."
#~ msgstr ""

#~ msgid "Event: ‘ping’"
#~ msgstr ""

#~ msgid "Fired when a ping packet is written out to the server."
#~ msgstr ""

#~ msgid "Event: ‘pong’"
#~ msgstr ""

#~ msgid ""
#~ "``ms`` *(Number)* number of ms elapsed"
#~ " since ``ping`` packet (i.e.: latency)."
#~ msgstr ""

#~ msgid "Fired when a pong is received from the server."
#~ msgstr ""

